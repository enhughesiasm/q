[{"D:\\Documents\\Sites\\q\\src\\index.js":"1","D:\\Documents\\Sites\\q\\src\\resources\\styles\\styles.js":"2","D:\\Documents\\Sites\\q\\src\\App.js":"3","D:\\Documents\\Sites\\q\\src\\serviceWorker.js":"4","D:\\Documents\\Sites\\q\\src\\error_boundary.js":"5","D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz.js":"6","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_gate.js":"7","D:\\Documents\\Sites\\q\\src\\components\\scores\\scores.js":"8","D:\\Documents\\Sites\\q\\src\\config.js":"9","D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz_explanation.js":"10","D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz_login.js":"11","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin.js":"12","D:\\Documents\\Sites\\q\\src\\components\\scores\\session_scores.js":"13","D:\\Documents\\Sites\\q\\src\\components\\shared\\header.js":"14","D:\\Documents\\Sites\\q\\src\\components\\shared\\footer.js":"15","D:\\Documents\\Sites\\q\\src\\components\\quiz\\session.js":"16","D:\\Documents\\Sites\\q\\src\\components\\quiz\\session_form.js":"17","D:\\Documents\\Sites\\q\\src\\components\\shared\\success_icon.js":"18","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session_list.js":"19","D:\\Documents\\Sites\\q\\src\\components\\admin\\platonic_rounds_table.js":"20","D:\\Documents\\Sites\\q\\src\\components\\quiz\\waiting_for_session.js":"21","D:\\Documents\\Sites\\q\\src\\components\\quiz\\assigning_team.js":"22","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_session.js":"23","D:\\Documents\\Sites\\q\\src\\components\\quiz\\team_assigned.js":"24","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session.js":"25","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session_table.js":"26","D:\\Documents\\Sites\\q\\src\\components\\shared\\bounce_loader_wrapped.js":"27","D:\\Documents\\Sites\\q\\src\\components\\quiz\\welcome_banner.js":"28","D:\\Documents\\Sites\\q\\src\\components\\quiz\\next_round.js":"29","D:\\Documents\\Sites\\q\\src\\components\\quiz\\round_finished.js":"30","D:\\Documents\\Sites\\q\\src\\components\\shared\\giphy.js":"31","D:\\Documents\\Sites\\q\\src\\components\\quiz\\session_loading.js":"32","D:\\Documents\\Sites\\q\\src\\components\\admin\\live_tag.js":"33","D:\\Documents\\Sites\\q\\src\\components\\quiz\\between_rounds.js":"34","D:\\Documents\\Sites\\q\\src\\components\\admin\\player_table.js":"35","D:\\Documents\\Sites\\q\\src\\components\\quiz\\round_countdown.js":"36","D:\\Documents\\Sites\\q\\src\\components\\quiz\\player_rounds_table.js":"37","D:\\Documents\\Sites\\q\\src\\components\\admin\\player_team.js":"38","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\live_round.js":"39","D:\\Documents\\Sites\\q\\src\\components\\quiz\\team_status.js":"40","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\live_score.js":"41","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\end_of_round_countdown.js":"42","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\loading_question.js":"43","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\unanswered_question.js":"44","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\answered_question.js":"45","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\round_banner.js":"46","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\exhausted.js":"47","D:\\Documents\\Sites\\q\\src\\components\\shared\\fade_up.js":"48","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\question_text.js":"49","D:\\Documents\\Sites\\q\\src\\components\\quiz\\connection_indicator.js":"50","D:\\Documents\\Sites\\q\\src\\components\\shared\\maths_string.js":"51"},{"size":465,"mtime":1594812929605,"results":"52","hashOfConfig":"53"},{"size":306,"mtime":1594808490731,"results":"54","hashOfConfig":"53"},{"size":927,"mtime":1615570587182,"results":"55","hashOfConfig":"53"},{"size":5086,"mtime":499162500000,"results":"56","hashOfConfig":"53"},{"size":440,"mtime":1594807768473,"results":"57","hashOfConfig":"53"},{"size":397,"mtime":1612019120163,"results":"58","hashOfConfig":"53"},{"size":1614,"mtime":1598453207271,"results":"59","hashOfConfig":"53"},{"size":3253,"mtime":1594808640846,"results":"60","hashOfConfig":"53"},{"size":384,"mtime":1598606979629,"results":"61","hashOfConfig":"53"},{"size":534,"mtime":1594812945184,"results":"62","hashOfConfig":"53"},{"size":15148,"mtime":1615573798985,"results":"63","hashOfConfig":"53"},{"size":10578,"mtime":1598532154324,"results":"64","hashOfConfig":"53"},{"size":2084,"mtime":1594807768555,"results":"65","hashOfConfig":"53"},{"size":769,"mtime":1612022070394,"results":"66","hashOfConfig":"53"},{"size":347,"mtime":1594809419325,"results":"67","hashOfConfig":"53"},{"size":1667,"mtime":1612021343646,"results":"68","hashOfConfig":"53"},{"size":3767,"mtime":1611840851526,"results":"69","hashOfConfig":"53"},{"size":689,"mtime":1594807768530,"results":"70","hashOfConfig":"53"},{"size":1735,"mtime":1594807768639,"results":"71","hashOfConfig":"53"},{"size":617,"mtime":1598455672895,"results":"72","hashOfConfig":"53"},{"size":1000,"mtime":1612021126874,"results":"73","hashOfConfig":"53"},{"size":716,"mtime":1594807768581,"results":"74","hashOfConfig":"53"},{"size":2057,"mtime":1594807768591,"results":"75","hashOfConfig":"53"},{"size":855,"mtime":1594807768603,"results":"76","hashOfConfig":"53"},{"size":10178,"mtime":1594807768638,"results":"77","hashOfConfig":"53"},{"size":3129,"mtime":1594807768640,"results":"78","hashOfConfig":"53"},{"size":506,"mtime":1612021865753,"results":"79","hashOfConfig":"53"},{"size":723,"mtime":1612021559358,"results":"80","hashOfConfig":"53"},{"size":869,"mtime":1594807768594,"results":"81","hashOfConfig":"53"},{"size":605,"mtime":1612021997498,"results":"82","hashOfConfig":"53"},{"size":1330,"mtime":1611842631259,"results":"83","hashOfConfig":"53"},{"size":440,"mtime":1594807768603,"results":"84","hashOfConfig":"53"},{"size":359,"mtime":1594807768641,"results":"85","hashOfConfig":"53"},{"size":3135,"mtime":1612021878773,"results":"86","hashOfConfig":"53"},{"size":2818,"mtime":1594807768642,"results":"87","hashOfConfig":"53"},{"size":1581,"mtime":1594807768599,"results":"88","hashOfConfig":"53"},{"size":910,"mtime":1612020568994,"results":"89","hashOfConfig":"53"},{"size":474,"mtime":1594807768643,"results":"90","hashOfConfig":"53"},{"size":2487,"mtime":1612021765125,"results":"91","hashOfConfig":"53"},{"size":1036,"mtime":1612020914489,"results":"92","hashOfConfig":"53"},{"size":1964,"mtime":1594807768587,"results":"93","hashOfConfig":"53"},{"size":803,"mtime":1594807768584,"results":"94","hashOfConfig":"53"},{"size":370,"mtime":1594807768588,"results":"95","hashOfConfig":"53"},{"size":991,"mtime":1615570506692,"results":"96","hashOfConfig":"53"},{"size":2756,"mtime":1615570396720,"results":"97","hashOfConfig":"53"},{"size":718,"mtime":1594807768590,"results":"98","hashOfConfig":"53"},{"size":1748,"mtime":1594807768585,"results":"99","hashOfConfig":"53"},{"size":1260,"mtime":1594807768524,"results":"100","hashOfConfig":"53"},{"size":957,"mtime":1615570490727,"results":"101","hashOfConfig":"53"},{"size":504,"mtime":1612022260533,"results":"102","hashOfConfig":"53"},{"size":237,"mtime":1615576940651,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1rx81tr",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":13,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Sites\\q\\src\\index.js",[],["224","225"],"D:\\Documents\\Sites\\q\\src\\resources\\styles\\styles.js",[],"D:\\Documents\\Sites\\q\\src\\App.js",[],"D:\\Documents\\Sites\\q\\src\\serviceWorker.js",[],"D:\\Documents\\Sites\\q\\src\\error_boundary.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz.js",[],"D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_gate.js",[],"D:\\Documents\\Sites\\q\\src\\components\\scores\\scores.js",["226","227"],"import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Header from '../shared/header';\nimport config from '../../config';\nimport SessionScores from './session_scores';\n\nclass Scores extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\n\t\tconst socket = socketIOClient(socketAddress);\n\n\t\tsocket.on('connect', () => {\n\t\t\t// happens on first connection, and on subsequent reconnections\n\t\t\t// so each time we want to register for events\n\n\t\t\t// (this will join or rejoin the server-side session room, if we have one)\n\t\t\tsocket.emit('scores connection');\n\t\t});\n\n\t\tsocket.on('update scores data', () => {\n\t\t\tthis.updateSession();\n\t\t});\n\t\tsocket.on('update sessions list', () => {\n\t\t\tthis.fetchLiveSessions();\n\t\t});\n\n\t\tthis.state = {\n\t\t\tsocket: socket,\n\t\t\tliveSessions: [],\n\t\t\tselectedSessionId: null,\n\t\t\tteamScores: [],\n\t\t};\n\n\t\tthis.receiveLiveSessions = this.receiveLiveSessions.bind(this);\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.updateSession = this.updateSession.bind(this);\n\t\tthis.selectSession = this.selectSession.bind(this);\n\t\tthis.fetchLiveSessions = this.fetchLiveSessions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 900);\n\t\tthis.fetchLiveSessions();\n\t\tdocument.title = 'Q Scores';\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\tfetchLiveSessions() {\n\t\tthis.state.socket.emit('fetch live sessions', this.receiveLiveSessions);\n\t}\n\n\treceiveLiveSessions(sessions) {\n\t\tthis.setState({ liveSessions: sessions });\n\t}\n\n\tselectSession(id) {\n\t\tthis.setState({ selectedSessionId: id, teamScores: [] });\n\t\tthis.updateSession();\n\t}\n\n\ttick() {\n\t\tthis.updateSession();\n\t}\n\n\tupdateSession() {\n\t\tif (this.state.selectedSessionId) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'fetch team scores',\n\t\t\t\tthis.state.selectedSessionId,\n\t\t\t\t(teamScores) => {\n\t\t\t\t\tthis.setState({ teamScores: teamScores });\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet liveSessions = this.state.liveSessions;\n\t\tlet sessionSelected = !!this.state.selectedSessionId;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<section className='section'>\n\t\t\t\t\t{!sessionSelected && (\n\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t{liveSessions && liveSessions.length > 0 && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h1 className='title'>Pick Session</h1>\n\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{liveSessions.map((s, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='subtitle'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.selectSession(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ts.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{(!liveSessions || liveSessions.length == 0) && (\n\t\t\t\t\t\t\t\t<h1 className='title'>No Live Sessions</h1>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{sessionSelected && (\n\t\t\t\t\t\t<SessionScores\n\t\t\t\t\t\t\tsessionId={this.state.selectedSessionId}\n\t\t\t\t\t\t\tselectSession={this.selectSession}\n\t\t\t\t\t\t\tteamScores={this.state.teamScores}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Scores;\n","D:\\Documents\\Sites\\q\\src\\config.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz_explanation.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\quiz_login.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"D:\\Documents\\Sites\\q\\src\\components\\admin\\admin.js",["244","245","246","247","248"],"import React, { Component } from 'react';\nimport Header from '../shared/header';\nimport Footer from '../shared/footer';\nimport SessionList from './admin_session_list';\nimport socketIOClient from 'socket.io-client';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport SuccessIcon from '../shared/success_icon';\nimport PlatonicRoundsTable from './platonic_rounds_table';\nimport config from '../../config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nclass Admin extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\t\tconst socket = socketIOClient(socketAddress);\n\n\t\twindow.addEventListener(\n\t\t\t'focus',\n\t\t\t(() => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'connect',\n\t\t\t(() => {\n\t\t\t\t// inform the server this socket wants to know about admin events\n\t\t\t\tsocket.emit('admin connection');\n\t\t\t}).bind(this)\n\t\t);\n\n\t\t// TODO: replace these update functions with a 'less heavy' approach\n\t\t// for now i'm just stomping ALL the data on every update, but these could send\n\t\t// individual events with the actual data to be changed\n\t\t// and just update more gently\n\t\t// (like the client connection changed, which COULD just update the client connection instead of stomping)\n\t\t// for now i'm using one giant event because only I will be on this, and I've throttled fetchQuiz to only\n\t\t// work every few seconds anyway...\n\t\tsocket.on('client connection changed', () => this.fetchQuiz());\n\t\tsocket.on('update admin data', () => this.fetchQuiz());\n\n\t\tthis.state = {\n\t\t\tsocket: socket,\n\t\t\tselectedSessionId: null,\n\t\t\tsessions: [],\n\t\t\tplatonicRounds: [],\n\t\t\tteams: [],\n\t\t\tisFetching: false,\n\t\t\tnewSessionName: '',\n\t\t};\n\n\t\tthis.handleSelectSession = this.handleSelectSession.bind(this);\n\t\tthis.fetchQuiz = this.fetchQuiz.bind(this);\n\t\tthis.handleFlipSessionLive = this.handleFlipSessionLive.bind(this);\n\t\tthis.handleSubmitNewRound = this.handleSubmitNewRound.bind(this);\n\t\tthis.handleFlipTeam = this.handleFlipTeam.bind(this);\n\t\tthis.handleDeletePlayer = this.handleDeletePlayer.bind(this);\n\t\tthis.handleDeleteSession = this.handleDeleteSession.bind(this);\n\t\tthis.handleReseedDatabase = this.handleReseedDatabase.bind(this);\n\t\tthis.handleWipeAllData = this.handleWipeAllData.bind(this);\n\n\t\tthis.onClickWipeAllData = this.onClickWipeAllData.bind(this);\n\t\tthis.onClickReseedDatabase = this.onClickReseedDatabase.bind(this);\n\n\t\tthis.handleDeleteRoundInstance = this.handleDeleteRoundInstance.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onChangeSessionName = this.onChangeSessionName.bind(this);\n\t\tthis.createNewSession = this.createNewSession.bind(this);\n\t\tthis.isNewSessionNameValid = this.isNewSessionNameValid.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.title = 'QAdmin';\n\n\t\tthis.loadInitialData();\n\t\tthis.fetchQuiz();\n\t}\n\n\tloadInitialData() {\n\t\tthis.loadPlatonicRounds();\n\t\tthis.loadTeams();\n\t}\n\n\tloadPlatonicRounds() {\n\t\tthis.state.socket.emit('fetch platonic round list', (list) => {\n\t\t\tthis.setState({ platonicRounds: list });\n\t\t});\n\t}\n\n\tloadTeams() {\n\t\tthis.state.socket.emit('fetch teams', (teams) => {\n\t\t\tthis.setState({ teams: teams });\n\t\t});\n\t}\n\n\tfetchQuiz() {\n\t\t// TODO: consider adding a throttle here to only update every 5s at most (needs to set a timeout to update in a moment)\n\n\t\tif (!this.state.isFetching) {\n\t\t\tthis.setState({ isFetching: true });\n\t\t\tthis.state.socket.emit('fetch quiz', (sessions) => {\n\t\t\t\tthis.setState({ sessions: sessions, isFetching: false });\n\t\t\t});\n\t\t}\n\t}\n\n\tonChangeSessionName(e) {\n\t\tthis.setState({ newSessionName: e.target.value });\n\t}\n\n\thandleFlipTeam(player) {\n\t\tthis.state.socket.emit('flip team', player, () => {\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleSelectSession(id) {\n\t\tthis.fetchQuiz();\n\t\tthis.setState({ selectedSessionId: id });\n\t}\n\n\thandleSubmitNewRound(newRound) {\n\t\tthis.state.socket.emit('submit new round instance', newRound, () => {\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleDeleteRoundInstance(id) {\n\t\tthis.state.socket.emit(\n\t\t\t'delete round instance',\n\t\t\tid,\n\t\t\tthis.state.selectedSessionId,\n\t\t\t() => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}\n\t\t);\n\t}\n\n\tupdateRoundInstanceTimes() {\n\t\t// this just needs to call the db, and then the server function calls pushRoundInstanceToSession (see newround/deleteround)\n\t}\n\n\thandleFlipSessionLive(sessionId) {\n\t\tthis.state.socket.emit(\n\t\t\t'admin flip session live',\n\t\t\tsessionId,\n\t\t\t(() => {\n\t\t\t\t// this.loadSessions();\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}).bind(this)\n\t\t);\n\t}\n\n\tonClickWipeAllData() {\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage:\n\t\t\t\t'*** THIS WILL WIPE ALL OF THE EXISTING SESSIONS, ROUNDS, PLAYERS, AND SUBMITTED QUESTIONS/ANSWERS ***',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.handleWipeAllData(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tonClickReseedDatabase() {\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage:\n\t\t\t\t'*** THIS WILL DELETE **ALL DATA** AND RESEED ALL OF THE PLATONIC ROUNDS AND QUESTIONS ***',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.handleReseedDatabase(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\thandleReseedDatabase() {\n\t\tthis.state.socket.emit('reseed database', (message) => {\n\t\t\tif (message == 'ok') {\n\t\t\t\talert('ok');\n\t\t\t} else if (message && message.name == 'error') {\n\t\t\t\talert('error');\n\t\t\t} else {\n\t\t\t\talert('unexpected response: ' + message);\n\t\t\t}\n\n\t\t\tthis.loadInitialData();\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleWipeAllData() {\n\t\tthis.state.socket.emit('wipe all data', () => {\n\t\t\tthis.loadInitialData();\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\tisNewSessionNameValid() {\n\t\treturn (\n\t\t\tthis.state.newSessionName && this.state.newSessionName.length > 3\n\t\t);\n\t}\n\n\tcreateNewSession() {\n\t\tif (this.isNewSessionNameValid()) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'create new session',\n\t\t\t\tthis.state.newSessionName,\n\t\t\t\t() => {\n\t\t\t\t\tthis.fetchQuiz();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\thandleDeletePlayer(playerId) {\n\t\tif (playerId && Number.isInteger(playerId)) {\n\t\t\tthis.state.socket.emit('delete player', playerId, () => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t});\n\t\t}\n\t}\n\n\thandleDeleteSession(sessionId) {\n\t\tif (sessionId && Number.isInteger(sessionId)) {\n\t\t\tthis.state.socket.emit('delete session', sessionId, () => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div className='columns'>\n\t\t\t\t\t<div className='column is-half is-offset-one-quarter'>\n\t\t\t\t\t\t<section className='section'>\n\t\t\t\t\t\t\t<h1 className='title'>Admin</h1>\n\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>Sessions</h2>\n\t\t\t\t\t\t\t\t<SessionList\n\t\t\t\t\t\t\t\t\tsessions={this.state.sessions}\n\t\t\t\t\t\t\t\t\tplatonicRounds={this.state.platonicRounds}\n\t\t\t\t\t\t\t\t\tteams={this.state.teams}\n\t\t\t\t\t\t\t\t\tselectedSessionId={\n\t\t\t\t\t\t\t\t\t\tthis.state.selectedSessionId\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleFlipTeam={this.handleFlipTeam}\n\t\t\t\t\t\t\t\t\thandleSubmitNewRound={\n\t\t\t\t\t\t\t\t\t\tthis.handleSubmitNewRound\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleDeleteRoundInstance={\n\t\t\t\t\t\t\t\t\t\tthis.handleDeleteRoundInstance\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleDeletePlayer={this.handleDeletePlayer}\n\t\t\t\t\t\t\t\t\thandleDeleteSession={\n\t\t\t\t\t\t\t\t\t\tthis.handleDeleteSession\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleFlipSessionLive={\n\t\t\t\t\t\t\t\t\t\tthis.handleFlipSessionLive\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleSelectSession={\n\t\t\t\t\t\t\t\t\t\tthis.handleSelectSession\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{!this.state.selectedSessionId && (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='label'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor='sessionName'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd New Session\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='control has-icons-left has-icons-right'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(this.isNewSessionNameValid()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'is-warning') +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' input'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='sessionName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='New session name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.newSessionName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.onChangeSessionName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfaUser\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isNewSessionNameValid()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='level'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='level-item'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-info'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.createNewSession\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>\n\t\t\t\t\t\t\t\t\tAvailable Platonic Rounds\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<span className='has-text-info'>Maths</span>{' '}\n\t\t\t\t\t\t\t\t\t/ Not Maths)\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<PlatonicRoundsTable\n\t\t\t\t\t\t\t\t\tplatonicRounds={this.state.platonicRounds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{!this.state.selectedSessionId && (\n\t\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>\n\t\t\t\t\t\t\t\t\t\t\tDangerous Nonsense\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-danger'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onClickWipeAllData\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\tWipe All Data\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-danger'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onClickReseedDatabase\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\tReseed Database\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","D:\\Documents\\Sites\\q\\src\\components\\scores\\session_scores.js",["249"],"import React, { Component } from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { FlexibleXYPlot, XAxis, YAxis, VerticalBarSeries, LabelSeries } from 'react-vis';\nimport windowDimensions from 'react-window-dimensions';\n\nclass SessionScores extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {  };\n\t}\n\n\troundUp(x){\n\t\tvar negative = false;\n\n\t\tif(x < 0) {\n\t\t\tnegative = true;\n\t\t\tx *= -1;\n\t\t}\n\t\tvar y = Math.pow(10, x.toString().length-1); x = (x/y);\n\t\tx = Math.ceil(x);\n\t\tx = x*y;\n\t\tif(negative) x *= -1;\n\t\treturn x;\n\t}\n\n\trender() {\n\n\t\tlet width = Math.max(this.props.width- 500, 300);\n\t\tlet height = Math.max(this.props.height - 300, 300);\n\n\t\tlet data = [];\n\t\tlet maxScore = 0;\n\t\tlet minScore = 0;\n\n\t\tif(this.props.teamScores && this.props.teamScores.length > 0)\n\t\t{\n\t\t\tdata = this.props.teamScores.map((ts,i) =>\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tx: 'Team ' + ts.name,\n\t\t\t\t\ty: ts.totalScore,\n\t\t\t\t\tcolor: ts.colour,\n\t\t\t\t\tlabel: ts.totalScore,\n\t\t\t\t\tyOffset: 0,\n\t\t\t\t\tstyle: { fontSize: '2.8rem', fontWeight: 'bold', fill:'white', stroke: 'black', strokeWidth: '2px'}};\n\t\t\t});\n\n\t\t\tmaxScore =  Math.max(...this.props.teamScores.map(o => o.totalScore), 0);\n\t\t\tminScore = this.props.teamScores.reduce((min, p) => p.totalScore < min ? p.totalScore : min, 0);\n\t\t}\n\n\t\tlet yMax = this.roundUp(maxScore);\n\n\t\tconsole.log(maxScore + '; ' + yMax);\n\n\t\tlet yDomain = [minScore, yMax];\n\n\t\treturn (\n\t\t\t<div style={{width: width + 100, margin:'auto'}}>\n\t\t\t\t<a onClick={() => this.props.selectSession(null)}>Back</a>\n\t\t\t\t<FlexibleXYPlot animation height={height} width={width} xType=\"ordinal\" yDomain={yDomain} style={{overflow:'visible'}}>\n\t\t\t\t\t<VerticalBarSeries animation data={data} colorType='literal' />\n\t\t\t\t\t<LabelSeries\n\t\t\t\t\t\tanimation\n\t\t\t\t\t\tallowOffsetToBeReversed\n\t\t\t\t\t\tdata={data} style={{color:'white !important'}} />\n\t\t\t\t\t<XAxis animation style={{ fontSize: '2rem', fontWeight: 'bold'}}/>\n\t\t\t\t\t<YAxis animation style={{ fontSize: '1.5rem', fontWeight: 'bold'}} />\n\t\t\t\t</FlexibleXYPlot>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default windowDimensions()(SessionScores);","D:\\Documents\\Sites\\q\\src\\components\\shared\\header.js",["250"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<NavBar />\n\t\t</header>\n\t);\n};\n\nconst NavBar = () => (\n\t<nav\n\t\tclassName='navbar is-info is-fixed-top'\n\t\trole='navigation'\n\t\taria-label='main navigation'>\n\t\t<div className='navbar-brand'>\n\t\t\t<h1 className='is-size-1 has-text-weight-bold has-text-centered px-4'>\n\t\t\t\tq\n\t\t\t</h1>\n\t\t</div>\n\t\t<div className='navbar-menu'>\n\t\t\t<div className='navbar-start'>\n\t\t\t\t{/* <NavLink to=\"/\" className=\"navbar-item\">\n\t\t\t\treturn to interactive login\n\t\t\t</NavLink> */}\n\t\t\t</div>\n\t\t\t<div className='navbar-end'>\n\t\t\t\t<a className='navbar-item' href='http://www.enhughesiasm.com'>\n\t\t\t\t\treturn to enhughesiasm\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</nav>\n);\n\nexport default Header;\n","D:\\Documents\\Sites\\q\\src\\components\\shared\\footer.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\session.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\session_form.js",[],"D:\\Documents\\Sites\\q\\src\\components\\shared\\success_icon.js",[],"D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session_list.js",["251","252"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SessionTable from './admin_session_table';\nimport SessionAdmin from './admin_session';\n\nclass SessionList extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t}\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ (!this.props.selectedSessionId) &&\n\t\t\t\t\t<SessionTable sessions={this.props.sessions} handleDeleteSession={this.props.handleDeleteSession} handleFlipSessionLive={this.props.handleFlipSessionLive} handleSelectSession={this.props.handleSelectSession} />\n\t\t\t\t}\n\t\t\t\t{ (this.props.selectedSessionId) &&\n\t\t\t\t\t<SessionAdmin\n\t\t\t\t\t\tsession={this.props.sessions.filter(n => n.id == this.props.selectedSessionId)[0]}\n\t\t\t\t\t\tplatonicRounds = {this.props.platonicRounds}\n\t\t\t\t\t\tteams={this.props.teams}\n\t\t\t\t\t\thandleFlipTeam={this.props.handleFlipTeam}\n\t\t\t\t\t\thandleSelectSession={this.props.handleSelectSession}\n\t\t\t\t\t\thandleFlipSessionLive={this.props.handleFlipSessionLive}\n\t\t\t\t\t\thandleSubmitNewRound={this.props.handleSubmitNewRound}\n\t\t\t\t\t\thandleDeleteRoundInstance={this.props.handleDeleteRoundInstance}\n\t\t\t\t\t\thandleDeletePlayer={this.props.handleDeletePlayer}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionList;\n\nSessionList.propTypes = {\n\tsessions: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n\tselectedSessionId: PropTypes.number,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleSubmitNewRound: PropTypes.func.isRequired,\n\thandleDeleteRoundInstance: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired,\n\thandleDeleteSession: PropTypes.func.isRequired,\n\tplatonicRounds: PropTypes.array.isRequired\n};","D:\\Documents\\Sites\\q\\src\\components\\admin\\platonic_rounds_table.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\waiting_for_session.js",["253"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport BounceLoaderWrapper from '../shared/bounce_loader_wrapped';\nimport Giphy from '../shared/giphy';\nimport WelcomeBanner from './welcome_banner';\n\nconst WaitingForSession = (props) => (\n\t<>\n\t\t<WelcomeBanner team={props.team} playerName={props.playerName} />\n\t\t<div className='notification is-light'>\n\t\t\t<div className='content has-text-centered'>\n\t\t\t\t<h2 className='subtitle has-text-primary is-size-6-mobile'>\n\t\t\t\t\tThe session{' '}\n\t\t\t\t\t<span className='has-text-success has-text-weight-bold'>\n\t\t\t\t\t\t{props.sessionName}\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tisn&apos;t yet live, but it should be soon.\n\t\t\t\t</h2>\n\t\t\t\t<h2 className='subtitle is-size-4 is-size-6-mobile'>\n\t\t\t\t\tHang on till then.\n\t\t\t\t</h2>\n\t\t\t\t<Giphy tag='bored' />\n\t\t\t</div>\n\t\t</div>\n\t</>\n);\nWaitingForSession.propTypes = {\n\tplayerName: PropTypes.string.isRequired,\n\tsessionName: PropTypes.string.isRequired,\n\tteam: PropTypes.object.isRequired,\n};\n\nexport default WaitingForSession;\n","D:\\Documents\\Sites\\q\\src\\components\\quiz\\assigning_team.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_session.js",["254","255"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NextRound from './next_round';\nimport BetweenRounds from './between_rounds';\nimport RoundFinished from './round_finished';\nimport SessionLoading from './session_loading';\n\n\nclass LiveSession extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet round = {};\n\t\tlet lastRound = {};\n\n\t\tlet allInstances = this.props.rounds.allRoundInstances;\n\t\tlet nextRoundIndexes = this.props.rounds.nextRoundIndexes;\n\n\t\tlet finishedRounds = (allInstances.length - nextRoundIndexes.length);\n\n\t\tif(nextRoundIndexes.length > 0){\n\t\t\t// we have an actual round object to pass down\n\t\t\tround = allInstances[nextRoundIndexes[0]];\n\t\t}\n\n\t\tlet justFinished = false;\n\n\t\tif(finishedRounds > 0){\n\t\t\t// let's see if a round has JUST finished\n\t\t\tlastRound = allInstances[finishedRounds - 1];\n\t\t\tjustFinished = lastRound.justFinished;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ justFinished && <RoundFinished round={lastRound} />}\n\t\t\t\t{!justFinished &&\n\t\t\t\t<div>\n\t\t\t\t\t{ !this.props.initialLoadComplete &&\n\t\t\t\t\t\t<SessionLoading />\n\t\t\t\t\t}\n\n\t\t\t\t\t{(this.props.initialLoadComplete) &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ nextRoundIndexes.length == 0 &&\n\t\t\t\t\t\t\t<BetweenRounds player={this.props.player}\n\t\t\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t\t\t\tsessionName={this.props.session.name}\n\t\t\t\t\t\t\t\tfinishedRounds={finishedRounds}\n\t\t\t\t\t\t\t\tisLoadingRounds={this.props.rounds.isLoading}\n\t\t\t\t\t\t\t\trounds={this.props.rounds.allRoundInstances}\n\t\t\t\t\t\t\t\tteams={this.props.session.teams}\n\t\t\t\t\t\t\t/> }\n\n\t\t\t\t\t\t{\t(nextRoundIndexes.length > 0) &&\n\t\t\t\t\t\t<NextRound round={ round }\n\t\t\t\t\t\t\tplayer={this.props.player}\n\t\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t\t\tsession={this.props.session} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t</div> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLiveSession.propTypes = {\n\tinitialLoadComplete: PropTypes.bool.isRequired,\n\trounds: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tplayerStatus: PropTypes.object.isRequired\n};\n\nexport default LiveSession;","D:\\Documents\\Sites\\q\\src\\components\\quiz\\team_assigned.js",[],"D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session.js",["256","257","258","259"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LiveTag from './live_tag';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport PlayerTable from './player_table';\n\n\nclass SessionAdmin extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {selectedRoundLength: 30,\n\t\t\tselectedRoundDelay: 5,\n\t\t\tselectedWrongAnswerFactor: -1,\n\t\t\tinputPointsPerQuestion: 10,\n\t\t\tisLoadingPreviousRounds: false,\n\t\t\tselectedPlatonicRoundIds: []};\n\n\n\t\tthis.handleRoundLengthChange = this.handleRoundLengthChange.bind(this);\n\t\tthis.handleRoundDelayChange = this.handleRoundDelayChange.bind(this);\n\t\tthis.handlePointsPerQuestionChange = this.handlePointsPerQuestionChange.bind(this);\n\t\tthis.handleWrongAnswerFactorChange = this.handleWrongAnswerFactorChange.bind(this);\n\n\t\tthis.onSubmitNewRound = this.onSubmitNewRound.bind(this);\n\t\tthis.onClickStartRound = this.onClickStartRound.bind(this);\n\t\tthis.newRoundIsValid = this.newRoundIsValid.bind(this);\n\t\tthis.platonicRoundLabelClicked = this.platonicRoundLabelClicked.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.timerID = setInterval(() => this.tick(), 2500);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick(){\n\t\tthis.forceUpdate();\n\t}\n\n\tnewRoundIsValid(){\n\t\treturn Number.isInteger(this.state.inputPointsPerQuestion) &&\n\t\t\t\tthis.state.selectedPlatonicRoundIds.length > 0  &&\n\t\t\t\t!Number.isNaN(this.state.selectedRoundLength) && this.state.selectedRoundLength > 0 && this.state.selectedRoundLength < 60;\n\t}\n\n\tonClickStartRound(){\n\n\t\tif(this.newRoundIsValid()){\n\n\t\t\tvar roundName = '';\n\n\t\t\tthis.state.selectedPlatonicRoundIds.forEach(prid => {\n\t\t\t\troundName += this.props.platonicRounds.filter(n => n.id == prid)[0].name + ' / ';\n\t\t\t});\n\n\t\t\tconfirmAlert({\n\t\t\t\ttitle: 'Are you sure?',\n\t\t\t\tmessage: 'You want to start a round of ' + roundName.toString().toUpperCase() + ' for ' + this.state.selectedRoundLength + ' minutes, ' + ' starting in ' + this.state.selectedRoundDelay + ' seconds?',\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\t\tonClick: () => this.onSubmitNewRound()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'No',\n\t\t\t\t\t\tonClick: null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\n\tplatonicRoundLabelClicked(prid){\n\t\tlet ids =  this.state.selectedPlatonicRoundIds;\n\t\tlet index = ids.indexOf(prid);\n\t\tif(ids.indexOf(prid) >= 0){\n\t\t\tids.splice(index, 1);\n\t\t}else{\n\t\t\tids.push(prid);\n\t\t}\n\t\tthis.setState({ selectedPlatonicRoundIds: ids });\n\t}\n\n\n\thandleRoundLengthChange(e){\n\n\t\tthis.setState({ selectedRoundLength: parseFloat(e.target.value) });\n\t}\n\n\thandleRoundDelayChange(e){\n\t\tthis.setState({ selectedRoundDelay: parseInt(e.target.value) });\n\t}\n\n\thandleWrongAnswerFactorChange(e){\n\t\tthis.setState({ selectedWrongAnswerFactor: parseInt(e.target.value)});\n\t}\n\n\thandlePointsPerQuestionChange(e){\n\t\ttry{\n\t\t\tlet v = parseInt(e.target.value);\n\t\t\tthis.setState({ inputPointsPerQuestion: v });\n\t\t}catch(ex){\n\t\t\t// do literally nothing, only I will ever use this page\n\t\t}\n\t}\n\n\tonSubmitNewRound(){\n\n\t\tlet now = moment();\n\t\tlet startTime = now.add(this.state.selectedRoundDelay, 's');\n\t\tstartTime.add(5, 's');\n\t\tlet startTimeFormatted = startTime.utc().format();\n\t\tlet endTime = startTime.add(this.state.selectedRoundLength, 'm');\n\t\tlet endTimeFormatted = endTime.utc().format();\n\n\t\tvar newRoundInstance = {\n\t\t\tstartTime: startTimeFormatted,\n\t\t\tendTime: endTimeFormatted,\n\t\t\tplatonicRoundIds: this.state.selectedPlatonicRoundIds,\n\t\t\tsessionId: this.props.session.id,\n\t\t\tpointsPerQuestion: this.state.inputPointsPerQuestion,\n\t\t\twrongAnswerFactor: this.state.selectedWrongAnswerFactor\n\t\t};\n\n\t\tthis.props.handleSubmitNewRound(newRoundInstance);\n\t}\n\n\n\tisLive(startTime, endTime){\n\t\tconst now = moment();\n\t\treturn now.isAfter(startTime) && now.isBefore(endTime);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"notification\">\n\t\t\t\t\t<a onClick={()=> this.props.handleSelectSession(null)}>Go Back</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h2 className=\"subtitle\" style={{display:'inline-block'}}>Session { this.props.session.id } : {this.props.session.name}</h2>\n\t\t\t\t\t<LiveTag isLive={this.props.session.isLive} />\n\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.props.handleFlipSessionLive(this.props.session.id)}>Flip</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<PlayerTable handleDeletePlayer={this.props.handleDeletePlayer} handleFlipTeam={this.props.handleFlipTeam} players={this.props.session.players} teams={this.props.teams} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h2 className=\"subtitle\">Previous Rounds</h2>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t\t\t<th>Number</th>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>PPQ</th>\n\t\t\t\t\t\t\t\t<th>Start</th>\n\t\t\t\t\t\t\t\t<th>End</th>\n\t\t\t\t\t\t\t\t<th>Questions Asked</th>\n\t\t\t\t\t\t\t\t<th>Questions Answered</th>\n\t\t\t\t\t\t\t\t<th>Correct Answers</th>\n\t\t\t\t\t\t\t\t<th>Correct Percentage</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{ this.props.session.roundInstances && this.props.session.roundInstances.length > 0 && this.props.session.roundInstances.map((round, i) =>\n\t\t\t\t\t\t\t\t<tr key={i} className={ (this.isLive(round.startTime, round.endTime) ? 'has-background-success' : 'has-background-warning')} >\n\t\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleDeleteRoundInstance(round.id)}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\">{i + 1}</td>\n\t\t\t\t\t\t\t\t\t<td>{ round.platonicRounds.map(pr => pr.name).join('/') }</td>\n\t\t\t\t\t\t\t\t\t<td>{round.pointsPerQuestion}</td>\n\t\t\t\t\t\t\t\t\t<td><Moment format=\"HH:mm:ss\">{round.startTime}</Moment></td>\n\t\t\t\t\t\t\t\t\t<td><Moment format=\"HH:mm:ss\">{round.endTime}</Moment></td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAsked ? round.questionsAsked : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAnswered ? round.questionsAnswered : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.correctAnswers ? round.correctAnswers : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAnswered && round.correctAnswers ? Math.round(100 * (round.correctAnswers / round.questionsAnswered)) + '%' : 'N/A'} </td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h3 className=\"has-text-bold is-size-4\">Create New Round: </h3>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.platonicRounds.map((pr, i) =>\n\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t<label onClick={() => this.platonicRoundLabelClicked(pr.id) } className={'checkbox ' + (pr.parseAsMaths ? 'has-text-info' : '')} htmlFor={'checkbox' + pr.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input style={{marginRight: '5px'}} type=\"checkbox\" name={'checkbox' + pr.name} value={pr.id} checked={(this.state.selectedPlatonicRoundIds.indexOf(pr.id) >= 0)} />\n\t\t\t\t\t\t\t\t\t\t\t\t{pr.name}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"roundLength\" className=\"label\">Length: </label>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<th><select id=\"roundLength\" value={this.state.selectedRoundLength} onChange={this.handleRoundLengthChange}>\n\t\t\t\t\t\t\t\t\t<option value={0.1}>6 seconds</option>\n\t\t\t\t\t\t\t\t\t<option value={0.25}>15 seconds</option>\n\t\t\t\t\t\t\t\t\t<option value={1}>1</option>\n\t\t\t\t\t\t\t\t\t<option value={2}>2</option>\n\t\t\t\t\t\t\t\t\t<option value={5}>5</option>\n\t\t\t\t\t\t\t\t\t<option value={8}>8</option>\n\t\t\t\t\t\t\t\t\t<option value={10}>10</option>\n\t\t\t\t\t\t\t\t\t<option value={12}>12</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>15</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>20</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>25</option>\n\t\t\t\t\t\t\t\t\t<option value={30}>30</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span style={{marginLeft: '5px'}}>minutes</span>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><label htmlFor=\"roundDelay\" className=\"label\">Starting in: </label></th>\n\t\t\t\t\t\t\t\t<th><select id=\"roundDelay\" value={this.state.selectedRoundDelay} onChange={this.handleRoundDelayChange}>\n\t\t\t\t\t\t\t\t\t<option value={5}>5</option>\n\t\t\t\t\t\t\t\t\t<option value={10}>10</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>15</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>20</option>\n\t\t\t\t\t\t\t\t\t<option value={30}>30</option>\n\t\t\t\t\t\t\t\t\t<option value={60}>60</option>\n\t\t\t\t\t\t\t\t\t<option value={600}>600</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span style={{marginLeft: '5px'}}>seconds</span>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><label htmlFor=\"wrongAnswerFactor\" className=\"label\">Wrong Answer Multiplication Factor </label></th>\n\t\t\t\t\t\t\t\t<th><select id=\"wrongAnswerFactor\" value={this.state.selectedWrongAnswerFactor} onChange={this.handleWrongAnswerFactorChange}>\n\t\t\t\t\t\t\t\t\t<option value={0}>0</option>\n\t\t\t\t\t\t\t\t\t<option value={-1}>-1</option>\n\t\t\t\t\t\t\t\t\t<option value={-2}>-2</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"pointsPerQuestion\" className=\"label\">Points Per Question: </label></th>\n\t\t\t\t\t\t\t\t<th><input id=\"pointsPerQuestion\" value={this.state.inputPointsPerQuestion} onChange={this.handlePointsPerQuestionChange} />\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName={ (this.newRoundIsValid() ? 'is-success' : 'is danger') + ' button' }\n\t\t\t\t\t\t\t\t\t\tdisabled={ (!this.newRoundIsValid()) }\n\t\t\t\t\t\t\t\t\t\tonClick={ this.onClickStartRound }>\n\t\t\t\t\t\t\tStart!\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSessionAdmin.propTypes = {\n\tsession: PropTypes.object.isRequired,\n\tteams: PropTypes.array.isRequired,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired,\n\thandleSubmitNewRound: PropTypes.func.isRequired,\n\thandleDeleteRoundInstance: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired,\n\tplatonicRounds: PropTypes.array.isRequired\n};\n\nexport default SessionAdmin;","D:\\Documents\\Sites\\q\\src\\components\\admin\\admin_session_table.js",["260","261","262","263","264"],"import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LiveTag from './live_tag';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport default class SessionTable extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.onDeleteSessionClicked = this.onDeleteSessionClicked.bind(this);\n\t}\n\n\tonDeleteSessionClicked(session){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to wipe out ' + session.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleDeleteSession(session.id)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\n\trender(){\n\t\treturn(\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Live?</th>\n\t\t\t\t\t\t<th>Players (Connected)</th>\n\t\t\t\t\t\t<th style={{color: 'orange'}}>Orange</th>\n\t\t\t\t\t\t<th style={{color: 'purple'}}>Purple</th>\n\t\t\t\t\t\t<th style={{color: 'grey'}}>None</th>\n\t\t\t\t\t\t<th>Rounds (Completed)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.sessions.map((session,i) =>\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.onDeleteSessionClicked(session)}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleSelectSession(session.id)}>{session.id}</a></td>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleSelectSession(session.id)}>{session.name}</a></td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.props.handleFlipSessionLive(session.id)}>Flip</button>\n\t\t\t\t\t\t\t\t\t<LiveTag isLive={session.isLive} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{ session.players.length } ({ session.players.filter(n => n.isConnected).length })\n\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t{/* TODO: yup, this is dumb, but I am currently guaranteeing team_ids to be either 1, 2 or null and I'm in a real hurry here! -->\n\t\t\t\t\t\t\t\t\tif I decide to implement more than these two teams this will need to be more clever, iterating over a list of teams, or similar */}\n\t\t\t\t\t\t\t\t<td style={{color:'orange'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == 1;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td style={{color:'purple'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == 2;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td style={{color:'grey'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == null;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{ session.roundInstances.length } ({ session.roundInstances.filter(ri => ri != null && ri.endTime != null && moment(ri.endTime).isBefore(moment())).length })\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</table>);\n\t}\n}\n\nSessionTable.propTypes = {\n\tsessions: PropTypes.array.isRequired,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleDeleteSession: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired\n};","D:\\Documents\\Sites\\q\\src\\components\\shared\\bounce_loader_wrapped.js",["265"],"import React from 'react';\nimport { css } from '@emotion/core';\nimport { BounceLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\nconst BounceLoaderWrapper = (props) => (\n\t<div\n\t\tstyle={{\n\t\t\theight: '50px',\n\t\t\ttextAlign: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t}}>\n\t\t<BounceLoader color={props.color ? props.color : '#dddddd'} />\n\t</div>\n);\n\nBounceLoaderWrapper.propTypes = {\n\tcolor: PropTypes.string,\n};\n\nexport default BounceLoaderWrapper;\n","D:\\Documents\\Sites\\q\\src\\components\\quiz\\welcome_banner.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\next_round.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\round_finished.js",[],"D:\\Documents\\Sites\\q\\src\\components\\shared\\giphy.js",["266","267","268"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport white from './../../resources/images/GiphyWhite.png';\nimport black from './../../resources/images/GiphyBlack.png';\n\nclass Giphy extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tapiKey: '9LYRB89KKFIH8WgVUetwuoQCB0LihwnT',\n\t\t\tendPoint: 'https://api.giphy.com/v1/gifs/random',\n\t\t\trating: 'g', // 'Y, G, PG, PG-13 and R'\n\t\t\timgUrl: '',\n\t\t\tvisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tvar requestEndpoint =\n\t\t\tthis.state.endPoint +\n\t\t\t'?api_key=' +\n\t\t\tthis.state.apiKey +\n\t\t\t'&tag=' +\n\t\t\tthis.props.tag +\n\t\t\t'&rating=' +\n\t\t\tthis.state.rating;\n\n\t\tfetch(requestEndpoint, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((result) => result.json())\n\t\t\t.then((gif) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\timgUrl: gif.data.images.fixed_height.url,\n\t\t\t\t\tvisible: true,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(\"Couldn't load from giphy\");\n\t\t\t});\n\t}\n\n\trender() {\n\t\tlet poweredByLocation = this.props.colour == 'light' ? black : white;\n\n\t\treturn (\n\t\t\t<div style={{ opacity: this.state.visible ? 1 : 0 }}>\n\t\t\t\t<p>\n\t\t\t\t\t<img src={this.state.imgUrl} />\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<img src={poweredByLocation} />\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nGiphy.propTypes = {\n\ttag: PropTypes.string.isRequired,\n\tcolour: PropTypes.string,\n};\n\nexport default Giphy;\n","D:\\Documents\\Sites\\q\\src\\components\\quiz\\session_loading.js",[],"D:\\Documents\\Sites\\q\\src\\components\\admin\\live_tag.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\between_rounds.js",["269","270"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport WelcomeBanner from './welcome_banner';\nimport TeamStatus from './team_status';\nimport PlayerRounds from './player_rounds_table';\nimport LoadingQuestion from './live_round/loading_question';\n\nconst BetweenRounds = (props) => {\n\tlet completedRounds = props.rounds.slice(0, props.finishedRounds);\n\n\treturn (\n\t\t<div>\n\t\t\t<WelcomeBanner\n\t\t\t\tteam={props.player.team}\n\t\t\t\tplayerName={props.player.name}\n\t\t\t/>\n\t\t\t{props.finishedRounds > 0 && (\n\t\t\t\t<div className=''>\n\t\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t\t{props.playerStatus &&\n\t\t\t\t\t\t\tprops.playerStatus.teamStatus && (\n\t\t\t\t\t\t\t\t<TeamStatus\n\t\t\t\t\t\t\t\t\tteamStatus={props.playerStatus.teamStatus}\n\t\t\t\t\t\t\t\t\tplayerTeam={props.player.team}\n\t\t\t\t\t\t\t\t\tteams={props.teams}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h2 className='subtitle is-size-6-mobile'>\n\t\t\t\t\t\t\tAfter{' '}\n\t\t\t\t\t\t\t<span className='has-text-info is-size-4 is-size-5-mobile has-text-weight-bold'>\n\t\t\t\t\t\t\t\t{props.finishedRounds}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tround{props.finishedRounds > 1 ? 's' : ''}, your\n\t\t\t\t\t\t\tscore is{' '}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t(props.playerStatus.totalScore < 0\n\t\t\t\t\t\t\t\t\t\t? 'has-text-danger'\n\t\t\t\t\t\t\t\t\t\t: 'has-text-success') +\n\t\t\t\t\t\t\t\t\t' is-size-3 is-size-5-mobile has-text-weight-bold'\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{props.playerStatus.totalScore\n\t\t\t\t\t\t\t\t\t? props.playerStatus.totalScore\n\t\t\t\t\t\t\t\t\t: 0}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h3 className='subtitle is-size-6-mobile'>\n\t\t\t\t\t\t\tYou&apos;ve answered{' '}\n\t\t\t\t\t\t\t<span className='has-text-info is-size-4 is-size-5-mobile has-text-weight-bold'>\n\t\t\t\t\t\t\t\t{props.playerStatus.questionsAnswered}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tquestions,{' '}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t(props.playerStatus.correctAnswers > 0\n\t\t\t\t\t\t\t\t\t\t? 'has-text-success'\n\t\t\t\t\t\t\t\t\t\t: 'has-text-warning') +\n\t\t\t\t\t\t\t\t\t' is-size-4 is-size-5-mobile has-text-weight-bold'\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{props.playerStatus.correctAnswers}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tcorrectly\n\t\t\t\t\t\t\t<span className='has-text-info'>\n\t\t\t\t\t\t\t\t{props.playerStatus.questionsAnswered != 0\n\t\t\t\t\t\t\t\t\t? ' (' +\n\t\t\t\t\t\t\t\t\t  Math.round(\n\t\t\t\t\t\t\t\t\t\t\t100 *\n\t\t\t\t\t\t\t\t\t\t\t\t(props.playerStatus\n\t\t\t\t\t\t\t\t\t\t\t\t\t.correctAnswers /\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.playerStatus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.questionsAnswered)\n\t\t\t\t\t\t\t\t\t  ) +\n\t\t\t\t\t\t\t\t\t  '%)'\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<PlayerRounds\n\t\t\t\t\t\t\tplayerStatus={props.playerStatus}\n\t\t\t\t\t\t\tcompletedRounds={completedRounds}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{props.finishedRounds === 0 && (\n\t\t\t\t<div className='notification is-light'>\n\t\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t\t<h2 className='subtitle has-text-success is-size-5-mobile'>\n\t\t\t\t\t\t\tYou&apos;re in!\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h2 className='subtitle is-size-5-mobile'>\n\t\t\t\t\t\t\tStay tuned, the first round will be along shortly...\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nBetweenRounds.propTypes = {\n\tfinishedRounds: PropTypes.number.isRequired,\n\tplayerStatus: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\trounds: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n};\n\nexport default BetweenRounds;\n","D:\\Documents\\Sites\\q\\src\\components\\admin\\player_table.js",["271","272"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerTeam from './player_team';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nexport default class PlayerTable extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleFlipTeam = this.handleFlipTeam.bind(this);\n\t}\n\n\thandleFlipTeam(player){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to flip the team for ' + player.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleFlipTeam(player)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tonDeletePlayerClicked(player){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to ***DELETE*** ' + player.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleDeletePlayer(player.id)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<table className=\"table content has-text-centered is-striped is-narrow is-hoverable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Team</th>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>Questions Asked</th>\n\t\t\t\t\t\t<th>Questions Answered</th>\n\t\t\t\t\t\t<th>Correct Answers</th>\n\t\t\t\t\t\t<th>Correct Percentage</th>\n\t\t\t\t\t\t<th>Total Score</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.props.players.map((player, i) =>\n\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t<td><a onClick={() => this.onDeletePlayerClicked(player)}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t<td className={ 'has-text-weight-bold has-text-' + (player.isConnected ? 'success' : 'danger')}>\n\t\t\t\t\t\t\t\t{player.name}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className='has-text-weight-bold'>\n\t\t\t\t\t\t\t\t<PlayerTeam teamId={player.teamId} teams={this.props.teams} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.teamId &&\n\t\t\t\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.handleFlipTeam(player)}>\n\t\t\t\t\t\t\t\t\tFlip Team\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.totalQuestions}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.answeredQuestions}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.correctAnswers}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{ player.answeredQuestions != 0 ? Math.round(100 * (player.correctAnswers / player.answeredQuestions)) + '%' : 'N/A'}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.totalScore}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</table>);\n\t}\n\n}\n\nPlayerTable.propTypes = {\n\tplayers: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired\n};","D:\\Documents\\Sites\\q\\src\\components\\quiz\\round_countdown.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\player_rounds_table.js",[],"D:\\Documents\\Sites\\q\\src\\components\\admin\\player_team.js",["273"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst PlayerTeam = (props) => {\n\tlet teamName = 'None';\n\tlet colour = '#ddd';\n\n\tif(props.teamId){\n\t\tlet team = props.teams.find(t => t.id == props.teamId);\n\t\tif(team){\n\t\t\tteamName = team.name;\n\t\t\tcolour = team.colour;\n\t\t}\n\t}\n\n\treturn(\n\t\t<span style={{color: colour}}>{teamName}</span>\n\t);};\n\nPlayerTeam.propTypes = {\n\tteams: PropTypes.array.isRequired,\n\tteamId: PropTypes.number\n};\n\nexport default PlayerTeam;","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\live_round.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\team_status.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\live_score.js",["274","275","276"],"import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FadeUp from '../../shared/fade_up';\n\nexport default class LiveScore extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpreviousTotalScore: props.playerStatus.totalScore,\n\t\t\tchangeInTotalScore: null,\n\t\t\tshowAnimationUntil: null\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\n\t\tconst showAnimationForSeconds = 1;\n\n\t\tif(nextProps.playerStatus.totalScore != prevState.previousTotalScore){\n\t\t\tlet change = nextProps.playerStatus.totalScore - (prevState.previousTotalScore ? prevState.previousTotalScore: 0);\n\n\t\t\treturn { previousTotalScore: nextProps.playerStatus.totalScore,\n\t\t\t\tchangeInTotalScore: change,\n\t\t\t\tshowAnimationUntil: moment().add(showAnimationForSeconds, 's')\n\t\t\t};\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender(){\n\t\tlet currentScore = 0;\n\t\tlet roundScore = this.props.playerStatus.scoresByRoundInstanceId.filter(a => a[0] == this.props.roundInstanceId);\n\t\tif(roundScore && roundScore.length > 0 && roundScore[0][1]){\n\t\t\tcurrentScore = parseInt(roundScore[0][1]);\n\t\t}\n\n\t\tlet showChangeAnimation = (this.state.changeInTotalScore != 0);\n\n\t\tlet success = this.state.changeInTotalScore > 0;\n\t\treturn(\n\t\t\t<div className=\"notification is-info is-clearfix\">\n\t\t\t\t<h1 className=\"title is-size-6 is-size-6-mobile is-pulled-left\" style={{marginBottom: 0}}>Round Score: { currentScore }</h1>\n\t\t\t\t<h1 className=\"title is-size-6 is-size-6-mobile is-pulled-right\" style={{marginBottom: 0}}>Total Score: { this.props.playerStatus.totalScore ? this.props.playerStatus.totalScore : 0 }</h1>\n\t\t\t\t{ showChangeAnimation && <FadeUp content={success ? '+' + this.state.changeInTotalScore : this.state.changeInTotalScore} success={ success } showUntil={this.state.showAnimationUntil} />}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLiveScore.propTypes = {\n\tplayerStatus: PropTypes.object.isRequired,\n\troundInstanceId: PropTypes.number.isRequired\n};","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\end_of_round_countdown.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\loading_question.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\unanswered_question.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\answered_question.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\round_banner.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\exhausted.js",["277","278"],"import React from 'react';\nimport Giphy from '../../shared/giphy';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ExhaustedRound = (props) =>{\n\tlet scoreForThisRound = 0;\n\tlet roundScore = props.playerStatus.scoresByRoundInstanceId.filter(a => a[0] == props.roundInstanceId);\n\tif(roundScore && roundScore.length > 0 && roundScore[0][1]){\n\t\tscoreForThisRound = parseInt(roundScore[0][1]);\n\t}\n\n\treturn(\n\t\t<section className=\"hero is-light is-medium\">\n\t\t\t<div className=\"hero-body\">\n\t\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">Hooray!</h2>\n\t\t\t\t\t<h1 className=\"title is-size-5-mobile has-text-success is-spaced\">You&apos;ve answered every single question.</h1>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile is-spaced\">\n\t\t\t\t\t\tThis round you scored <span className={'is-size-4 is-size-6-mobile ' + scoreForThisRound > 0 ? 'has-text-success' : 'has-text-danger' }>{ scoreForThisRound }</span>\n\t\t\t\t\t\t{ scoreForThisRound == props.playerStatus.totalScore ? '.' :\n\t\t\t\t\t\t\t<span> and your total score is <span className={'is-size-4 is-size-6-mobile ' + props.playerStatus.totalScore > 0 ? 'has-text-success' : 'has-text-danger' }>{props.playerStatus.totalScore}</span> </span> }\n\t\t\t\t\t</h3>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile is-spaced\">Chill out until the end of the round.</h3>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile\">(there&apos;s <Moment fromNow ago>{props.endTime}</Moment> to go).</h3>\n\t\t\t\t\t<Giphy tag={'relax'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>);};\n\nExhaustedRound.propTypes = {\n\troundInstanceId: PropTypes.number.isRequired,\n\tendTime: PropTypes.string.isRequired,\n\tplayerStatus: PropTypes.object.isRequired\n};\n\nexport default ExhaustedRound;","D:\\Documents\\Sites\\q\\src\\components\\shared\\fade_up.js",["279","280"],"import React, { Component } from 'react';\nimport moment from 'moment';\n\nexport default class FadeUp extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowUntil: null\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps, prevState){\n\n\t\tif(nextProps.showUntil != prevState.showUntil){\n\n\t\t\tlet now = moment();\n\n\t\t\treturn {\n\t\t\t\tbeginTime:now,\n\t\t\t\tduration: nextProps.showUntil.diff(now),\n\t\t\t\tshowUntil: nextProps.showUntil\n\t\t\t};\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\trender() {\n\t\tlet now = moment();\n\t\tlet opacity = 0;\n\t\tlet fractionThrough = 0;\n\n\t\tif(this.state.beginTime && this.state.duration){\n\n\t\t\tlet progress = now.diff(this.state.beginTime);\n\t\t\tfractionThrough = progress/ this.state.duration;\n\t\t\topacity = 1 - fractionThrough;\n\t\t}\n\t\tlet show = (now.isBefore(this.state.showUntil));\n\t\treturn (\n\t\t\t\n\t\t\t<span>\n\t\t\t\t<span className={\"content is-overlay has-text-centered is-size-4 has-text-weight-bold \" + (this.props.success ? 'has-background-success' : 'has-background-danger')} \n\t\t\t\t\tstyle={{ \t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\ttransition: `opacity .7s ease-in-out`,\t\t\t\t\t\n\t\t\t\t\topacity:opacity}}>\n\t\t\t\t\t<span className=\"level\">\n\t\t\t\t\t\t<span className=\"level-item\">\n\t\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\t\t\t\t\n\t\t\t</span>\n\t\t);\n\t}\n}","D:\\Documents\\Sites\\q\\src\\components\\quiz\\live_round\\question_text.js",[],"D:\\Documents\\Sites\\q\\src\\components\\quiz\\connection_indicator.js",[],"D:\\Documents\\Sites\\q\\src\\components\\shared\\maths_string.js",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":105,"column":15,"nodeType":"287","endLine":111,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":121,"column":47,"nodeType":"290","messageId":"291","endLine":121,"endColumn":49},{"ruleId":"292","severity":1,"message":"293","line":56,"column":7,"nodeType":"294","messageId":"291","endLine":56,"endColumn":11,"fix":"295"},{"ruleId":"292","severity":1,"message":"293","line":65,"column":7,"nodeType":"294","messageId":"291","endLine":65,"endColumn":11,"fix":"296"},{"ruleId":"292","severity":1,"message":"293","line":72,"column":7,"nodeType":"294","messageId":"291","endLine":72,"endColumn":11,"fix":"297"},{"ruleId":"292","severity":1,"message":"293","line":81,"column":7,"nodeType":"294","messageId":"291","endLine":81,"endColumn":11,"fix":"298"},{"ruleId":"292","severity":1,"message":"293","line":88,"column":7,"nodeType":"294","messageId":"291","endLine":88,"endColumn":11,"fix":"299"},{"ruleId":"292","severity":1,"message":"293","line":95,"column":7,"nodeType":"294","messageId":"291","endLine":95,"endColumn":11,"fix":"300"},{"ruleId":"292","severity":1,"message":"293","line":102,"column":7,"nodeType":"294","messageId":"291","endLine":102,"endColumn":11,"fix":"301"},{"ruleId":"292","severity":1,"message":"293","line":109,"column":7,"nodeType":"294","messageId":"291","endLine":109,"endColumn":11,"fix":"302"},{"ruleId":"292","severity":1,"message":"293","line":116,"column":7,"nodeType":"294","messageId":"291","endLine":116,"endColumn":11,"fix":"303"},{"ruleId":"292","severity":1,"message":"293","line":125,"column":7,"nodeType":"294","messageId":"291","endLine":125,"endColumn":11,"fix":"304"},{"ruleId":"292","severity":1,"message":"293","line":132,"column":7,"nodeType":"294","messageId":"291","endLine":132,"endColumn":11,"fix":"305"},{"ruleId":"292","severity":1,"message":"293","line":139,"column":7,"nodeType":"294","messageId":"291","endLine":139,"endColumn":11,"fix":"306"},{"ruleId":"288","severity":1,"message":"289","line":384,"column":17,"nodeType":"290","messageId":"291","endLine":384,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":467,"column":19,"nodeType":"290","messageId":"291","endLine":467,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":474,"column":50,"nodeType":"290","messageId":"291","endLine":474,"endColumn":52},{"ruleId":"292","severity":1,"message":"293","line":486,"column":7,"nodeType":"294","messageId":"291","endLine":486,"endColumn":11,"fix":"307"},{"ruleId":"292","severity":1,"message":"293","line":30,"column":7,"nodeType":"294","messageId":"291","endLine":30,"endColumn":11,"fix":"308"},{"ruleId":"292","severity":1,"message":"293","line":38,"column":7,"nodeType":"294","messageId":"291","endLine":38,"endColumn":11,"fix":"309"},{"ruleId":"292","severity":1,"message":"293","line":160,"column":7,"nodeType":"294","messageId":"291","endLine":160,"endColumn":11,"fix":"310"},{"ruleId":"288","severity":1,"message":"289","line":202,"column":16,"nodeType":"290","messageId":"291","endLine":202,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":204,"column":39,"nodeType":"290","messageId":"291","endLine":204,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":60,"column":5,"nodeType":"287","endLine":60,"endColumn":55},{"ruleId":"311","severity":1,"message":"312","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":7,"column":2,"nodeType":"317","messageId":"318","endLine":10,"endColumn":3},{"ruleId":"288","severity":1,"message":"289","line":22,"column":53,"nodeType":"290","messageId":"291","endLine":22,"endColumn":55},{"ruleId":"311","severity":1,"message":"319","line":3,"column":8,"nodeType":"313","messageId":"314","endLine":3,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":11,"column":2,"nodeType":"317","messageId":"318","endLine":13,"endColumn":3},{"ruleId":"288","severity":1,"message":"289","line":48,"column":33,"nodeType":"290","messageId":"291","endLine":48,"endColumn":35},{"ruleId":"288","severity":1,"message":"289","line":61,"column":61,"nodeType":"290","messageId":"291","endLine":61,"endColumn":63},{"ruleId":"320","severity":1,"message":"321","line":66,"column":141,"nodeType":"290","messageId":"322","endLine":66,"endColumn":142},{"ruleId":"285","severity":1,"message":"286","line":147,"column":6,"nodeType":"287","endLine":147,"endColumn":61},{"ruleId":"285","severity":1,"message":"286","line":177,"column":14,"nodeType":"287","endLine":177,"endColumn":80},{"ruleId":"285","severity":1,"message":"286","line":55,"column":13,"nodeType":"287","endLine":55,"endColumn":69},{"ruleId":"285","severity":1,"message":"286","line":58,"column":13,"nodeType":"287","endLine":58,"endColumn":75},{"ruleId":"285","severity":1,"message":"286","line":59,"column":13,"nodeType":"287","endLine":59,"endColumn":75},{"ruleId":"288","severity":1,"message":"289","line":71,"column":63,"nodeType":"290","messageId":"291","endLine":71,"endColumn":65},{"ruleId":"288","severity":1,"message":"289","line":74,"column":63,"nodeType":"290","messageId":"291","endLine":74,"endColumn":65},{"ruleId":"311","severity":1,"message":"323","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"289","line":44,"column":45,"nodeType":"290","messageId":"291","endLine":44,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":49,"column":6,"nodeType":"287","endLine":49,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":52,"column":6,"nodeType":"287","endLine":52,"endColumn":37},{"ruleId":"311","severity":1,"message":"326","line":6,"column":8,"nodeType":"313","messageId":"314","endLine":6,"endColumn":23},{"ruleId":"288","severity":1,"message":"327","line":64,"column":47,"nodeType":"290","messageId":"291","endLine":64,"endColumn":49},{"ruleId":"285","severity":1,"message":"286","line":69,"column":12,"nodeType":"287","endLine":69,"endColumn":66},{"ruleId":"288","severity":1,"message":"327","line":95,"column":36,"nodeType":"290","messageId":"291","endLine":95,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":10,"column":41,"nodeType":"290","messageId":"291","endLine":10,"endColumn":43},{"ruleId":"288","severity":1,"message":"327","line":21,"column":40,"nodeType":"290","messageId":"291","endLine":21,"endColumn":42},{"ruleId":"288","severity":1,"message":"289","line":35,"column":85,"nodeType":"290","messageId":"291","endLine":35,"endColumn":87},{"ruleId":"288","severity":1,"message":"327","line":40,"column":60,"nodeType":"290","messageId":"291","endLine":40,"endColumn":62},{"ruleId":"288","severity":1,"message":"289","line":8,"column":79,"nodeType":"290","messageId":"291","endLine":8,"endColumn":81},{"ruleId":"288","severity":1,"message":"289","line":21,"column":27,"nodeType":"290","messageId":"291","endLine":21,"endColumn":29},{"ruleId":"288","severity":1,"message":"327","line":15,"column":26,"nodeType":"290","messageId":"291","endLine":15,"endColumn":28},{"ruleId":"311","severity":1,"message":"328","line":41,"column":7,"nodeType":"313","messageId":"314","endLine":41,"endColumn":11},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"331","text":"332"},{"range":"333","text":"332"},{"range":"334","text":"332"},{"range":"335","text":"332"},{"range":"336","text":"332"},{"range":"337","text":"332"},{"range":"338","text":"332"},{"range":"339","text":"332"},{"range":"340","text":"332"},{"range":"341","text":"332"},{"range":"342","text":"332"},{"range":"343","text":"332"},{"range":"344","text":"332"},{"range":"345","text":"332"},{"range":"346","text":"332"},{"range":"347","text":"332"},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'BounceLoaderWrapper' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'css' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'LoadingQuestion' is defined but never used.","Expected '!==' and instead saw '!='.","'show' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1350,1361],"",[1548,1559],[1675,1686],[1841,1852],[1939,1950],[2038,2049],[2158,2169],[2298,2309],[2413,2424],[2638,2649],[2774,2785],[2863,2874],[11290,11301],[924,935],[1093,1104],[4602,4613]]