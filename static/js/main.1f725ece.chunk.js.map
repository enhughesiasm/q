{"version":3,"sources":["resources/styles/styles.js","error_boundary.js","components/shared/header.js","components/shared/footer.js","components/shared/giphy.js","components/quiz/welcome_banner.js","components/quiz/waiting_for_session.js","components/quiz/round_countdown.js","components/quiz/live_round/exhausted.js","components/quiz/live_round/round_banner.js","components/shared/maths_string.js","components/quiz/live_round/question_text.js","components/quiz/live_round/answered_question.js","components/quiz/live_round/unanswered_question.js","components/shared/fade_up.js","components/quiz/live_round/live_score.js","components/quiz/live_round/end_of_round_countdown.js","components/shared/bounce_loader_wrapped.js","components/quiz/live_round/loading_question.js","components/quiz/live_round/live_round.js","components/quiz/next_round.js","components/quiz/team_status.js","components/quiz/player_rounds_table.js","components/quiz/between_rounds.js","components/quiz/round_finished.js","components/quiz/session_loading.js","components/quiz/live_session.js","components/quiz/assigning_team.js","components/quiz/team_assigned.js","components/quiz/session.js","components/shared/success_icon.js","components/quiz/session_form.js","config.js","components/quiz/quiz_explanation.js","components/quiz/connection_indicator.js","components/quiz/quiz_login.js","components/quiz/quiz.js","components/admin/live_tag.js","components/admin/admin_session_table.js","components/admin/player_team.js","components/admin/player_table.js","components/admin/admin_session.js","components/admin/admin_session_list.js","components/admin/platonic_rounds_table.js","components/admin/admin.js","components/admin/admin_gate.js","components/scores/session_scores.js","components/scores/scores.js","App.js","serviceWorker.js","index.js"],"names":["require","ErrorBoundary","props","state","hasCaughtError","error","console","this","setState","children","React","Component","NavBar","className","role","aria-label","Header","Footer","currentYear","Date","getFullYear","style","padding","href","Giphy","apiKey","endPoint","rating","imgUrl","visible","WelcomeBanner","alignItems","background","team","colour","playerName","color","name","WaitingForSession","sessionName","tag","RoundCountdown","initialSecondsRemaining","secondsRemaining","roundNumber","roundName","value","max","ExhaustedRound","scoreForThisRound","roundScore","playerStatus","scoresByRoundInstanceId","filter","a","roundInstanceId","length","parseInt","totalScore","fromNow","ago","endTime","RoundBanner","marginBottom","round","MathsString","inputString","extraClasses","QuestionText","question","prompt","parseAsMaths","AnsweredQuestion","answeredCorrectly","submittedIndex","Number","isInteger","correctIndex","answers","map","answer","i","clickedIndex","disabled","whiteSpace","height","icon","faHandPointRight","faHandPointLeft","marginTop","Math","abs","pointsEarned","onClick","onClickNextQuestion","UnansweredQuestion","answerClicked","onClickAnswer","FadeUp","showUntil","now","moment","opacity","beginTime","duration","diff","success","transition","display","justifyContent","content","nextProps","prevState","LiveScore","previousTotalScore","changeInTotalScore","showAnimationUntil","currentScore","find","rs","toString","showChangeAnimation","change","add","EndOfRoundCountdown","diffInMs","showCountdown","BounceLoaderWrapper","textAlign","LoadingQuestion","LiveRound","bind","pullQuestion","pullNextQuestion","submitAnswer","playerQuestion","answered","exhausted","answerReceived","player","id","NextRound","isLive","session","TeamStatus","show","teamStatus","t","teamId","teams","playerCount","ts","borderRadius","playerNames","Array","isArray","PlayerRounds","completedRounds","completedRound","roundId","forEach","j","minWidth","BetweenRounds","rounds","slice","finishedRounds","playerTeam","correctAnswers","questionsAnswered","RoundFinished","SessionLoading","LiveSession","lastRound","allInstances","allRoundInstances","nextRoundIndexes","justFinished","initialLoadComplete","isLoadingRounds","isLoading","AssigningTeam","random","TeamAssigned","Session","showTeamAssignedUntil","showTeamAssignedScreenUntil","showTeamAssignedScreen","isBefore","SuccessIcon","position","faCheck","faTimes","SessionForm","onSubmit","onChangePlayerName","onChangeSessionName","e","handleChange","target","sessionForm","preventDefault","handleSubmit","width","htmlFor","isPlayerNameValid","placeholder","onChange","faUser","isSessionNameValid","faSuperscript","type","isValid","isSubmitting","config","isDev","socket","protocol","port","address","quiz","showRoundFinishedScreenForMilliseconds","showTeamAssignedScreenForSeconds","assignTeamForMilliseconds","QuizExplanation","ConnectionIndicator","connected","bottom","left","faCircle","faCircleNotch","QuizLogin","previousSubmission","hasSubmitted","socketAddress","socketIOClient","on","emit","instances","setServerRoundInstances","getPlayerStatus","receiveQuestion","reinitialiseState","status","receivePlayerStatus","playerId","receiveTeamAssignment","receiveTeamReassignment","ids","exhaustedRoundInstanceIds","push","log","liveRound","r","setTimeout","forceUpdate","initial","serverLoad","updateAfterServerLoad","statusAfterPlayerLoad","serverRoundInstances","nextPlayerQuestion","answerResponse","score","statusUpdateCounter","handleSessionFormSubmit","handleSessionFormChange","isSessionFormValid","loadRoundInstances","updateRoundInstances","getCurrentRoundScore","receiveAnswerResponse","timerID","setInterval","tick","clearInterval","counter","startTime","sessionId","sort","i1","i2","s1","s2","isAfter","platonicRoundIds","answerIndex","response","alert","scoreByRoundId","names","outStr","join","instance","getSecondsRemainingBeforeRoundStart","isRoundLive","formatRoundNames","platonicRoundNames","indexOf","millisecondsSinceRoundEnd","newTeam","showScreenUntil","submission","JSON","stringify","result","Quiz","LiveTag","marginLeft","marginRight","SessionTable","onDeleteSessionClicked","confirmAlert","title","message","buttons","label","handleDeleteSession","sessions","faTrash","handleSelectSession","handleFlipSessionLive","players","n","isConnected","p","roundInstances","ri","PlayerTeam","teamName","PlayerTable","handleFlipTeam","handleDeletePlayer","onDeletePlayerClicked","totalQuestions","answeredQuestions","SessionAdmin","selectedRoundLength","selectedRoundDelay","selectedWrongAnswerFactor","inputPointsPerQuestion","isLoadingPreviousRounds","selectedPlatonicRoundIds","handleRoundLengthChange","handleRoundDelayChange","handlePointsPerQuestionChange","handleWrongAnswerFactorChange","onSubmitNewRound","onClickStartRound","newRoundIsValid","platonicRoundLabelClicked","isNaN","prid","platonicRounds","toUpperCase","index","splice","parseFloat","v","ex","newRoundInstance","utc","format","pointsPerQuestion","wrongAnswerFactor","handleSubmitNewRound","handleDeleteRoundInstance","pr","questionsAsked","checked","SessionList","selectedSessionId","PlatonicRoundsTable","questionCount","Admin","window","addEventListener","fetchQuiz","isFetching","newSessionName","handleReseedDatabase","handleWipeAllData","onClickWipeAllData","onClickReseedDatabase","createNewSession","isNewSessionNameValid","document","loadInitialData","loadPlatonicRounds","loadTeams","list","newRound","AdminGate","temporarySocket","inputWord","passed","onChangeInputWord","onClickGoButton","SessionScores","x","negative","y","pow","ceil","data","maxScore","minScore","teamScores","yOffset","fontSize","fontWeight","fill","stroke","strokeWidth","o","reduce","min","yMax","roundUp","yDomain","margin","selectSession","animation","xType","overflow","colorType","allowOffsetToBeReversed","windowDimensions","Scores","updateSession","fetchLiveSessions","liveSessions","receiveLiveSessions","sessionSelected","s","App","HashRouter","basename","Switch","Route","exact","path","component","NotFound","Boolean","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f725ece.chunk.js","sourcesContent":["require('../../../node_modules/bulma/sass/utilities/initial-variables.sass');\nrequire('../../../node_modules/bulma/sass/utilities/functions.sass');\nrequire('./maths.scss');\nrequire('./quiz.scss');\n\n// alter bulma variables\nrequire('./customise.scss');\n\n// my responsive fixes\nrequire('./responsive.scss');\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { hasCaughtError: false };\n\t}\n\n\tcomponentDidCatch(error) {\n\t\tconsole.error(error);\n\t\tthis.setState({ hasCaughtError: true });\n\t}\n\n\trender() {\n\t\tif (this.state.hasCaughtError) {\n\t\t\treturn <div>Sorry! Something went wrong. Please try reloading the site.</div>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<NavBar />\n\t\t</header>\n\t);\n};\n\nconst NavBar = () => (\n\t<nav\n\t\tclassName='navbar is-info is-fixed-top'\n\t\trole='navigation'\n\t\taria-label='main navigation'>\n\t\t<div className='navbar-brand'>\n\t\t\t<h1 className='is-size-1 has-text-weight-bold has-text-centered px-4'>\n\t\t\t\tq\n\t\t\t</h1>\n\t\t</div>\n\t\t<div className='navbar-menu'>\n\t\t\t<div className='navbar-start'>\n\t\t\t\t{/* <NavLink to=\"/\" className=\"navbar-item\">\n\t\t\t\treturn to interactive login\n\t\t\t</NavLink> */}\n\t\t\t</div>\n\t\t\t{/* <div className='navbar-end'>\n\t\t\t\t<a className='navbar-item' href='http://www.enhughesiasm.com'>\n\t\t\t\t\treturn to enhughesiasm\n\t\t\t\t</a>\n\t\t\t</div> */}\n\t\t</div>\n\t</nav>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n\tconst currentYear = new Date().getFullYear();\n\treturn (\n\t\t<footer\n\t\t\tclassName='footer is-primary is-fixed-bottom'\n\t\t\tstyle={{ padding: '1rem 1.5rem 1rem' }}>\n\t\t\t<div className='content has-text-centered'>\n\t\t\t\t&copy; <a href='https://enhughesiasm.com'>Neil Hughes</a> 2019\n\t\t\t\t{currentYear !== 2019 ? '—' + currentYear : ''}\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport white from './../../resources/images/GiphyWhite.png';\nimport black from './../../resources/images/GiphyBlack.png';\n\nclass Giphy extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tapiKey: '9LYRB89KKFIH8WgVUetwuoQCB0LihwnT',\n\t\t\tendPoint: 'https://api.giphy.com/v1/gifs/random',\n\t\t\trating: 'g', // 'Y, G, PG, PG-13 and R'\n\t\t\timgUrl: '',\n\t\t\tvisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// var requestEndpoint =\n\t\t// \tthis.state.endPoint +\n\t\t// \t'?api_key=' +\n\t\t// \tthis.state.apiKey +\n\t\t// \t'&tag=' +\n\t\t// \tthis.props.tag +\n\t\t// \t'&rating=' +\n\t\t// \tthis.state.rating;\n\t\t// fetch(requestEndpoint, {\n\t\t// \tmethod: 'GET',\n\t\t// })\n\t\t// \t.then((result) => result.json())\n\t\t// \t.then((gif) => {\n\t\t// \t\tthis.setState({\n\t\t// \t\t\timgUrl: gif.data.images.fixed_height.url,\n\t\t// \t\t\tvisible: true,\n\t\t// \t\t});\n\t\t// \t})\n\t\t// \t.catch((e) => {\n\t\t// \t\tconsole.log(\"Couldn't load from giphy\");\n\t\t// \t});\n\t}\n\n\trender() {\n\t\t// let poweredByLocation = this.props.colour === 'light' ? black : white;\n\n\t\treturn (\n\t\t\t<></>\n\t\t\t// <div style={{ opacity: this.state.visible ? 1 : 0 }}>\n\t\t\t// \t<p>\n\t\t\t// \t\t<img src={this.state.imgUrl} alt='a random animated gif'/>\n\t\t\t// \t</p>\n\t\t\t// \t<p>\n\t\t\t// \t\t<img src={poweredByLocation} alt='powered by Giphy' />\n\t\t\t// \t</p>\n\t\t\t// </div>\n\t\t);\n\t}\n}\n\nGiphy.propTypes = {\n\ttag: PropTypes.string.isRequired,\n\tcolour: PropTypes.string,\n};\n\nexport default Giphy;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst WelcomeBanner = (props) => (\n\t<div\n\t\tclassName='notification tile is-parent is-vertical is-light mx-4 has-text-centered is-flex has-text-white'\n\t\tstyle={{ alignItems: 'center', background: props.team.colour }}>\n\t\t<div className='tile is-child'>\n\t\t\t<p className='title is-size-5-mobile'>\n\t\t\t\tWelcome, {props.playerName}\n\t\t\t</p>\n\t\t</div>\n\t\t<div className='tile is-child'>\n\t\t\t<p className='has-text-black tag is-size-5 is-size-6-mobile'>\n\t\t\t\tValued member of{' '}\n\t\t\t\t<span style={{ color: props.team.colour }}>\n\t\t\t\t\t&nbsp;Team {props.team.name}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n);\n\nWelcomeBanner.propTypes = {\n\tplayerName: PropTypes.string.isRequired,\n\tteam: PropTypes.object.isRequired,\n};\n\nexport default WelcomeBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Giphy from '../shared/giphy';\nimport WelcomeBanner from './welcome_banner';\n\nconst WaitingForSession = (props) => (\n\t<>\n\t\t<WelcomeBanner team={props.team} playerName={props.playerName} />\n\t\t<div className='notification is-light'>\n\t\t\t<div className='content has-text-centered'>\n\t\t\t\t<h2 className='subtitle has-text-primary is-size-6-mobile'>\n\t\t\t\t\tThe session{' '}\n\t\t\t\t\t<span className='has-text-success has-text-weight-bold'>\n\t\t\t\t\t\t{props.sessionName}\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tisn&apos;t yet live, but it should be soon.\n\t\t\t\t</h2>\n\t\t\t\t<h2 className='subtitle is-size-4 is-size-6-mobile'>\n\t\t\t\t\tHang on till then.\n\t\t\t\t</h2>\n\t\t\t\t<Giphy tag='bored' />\n\t\t\t</div>\n\t\t</div>\n\t</>\n);\nWaitingForSession.propTypes = {\n\tplayerName: PropTypes.string.isRequired,\n\tsessionName: PropTypes.string.isRequired,\n\tteam: PropTypes.object.isRequired,\n};\n\nexport default WaitingForSession;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Giphy from '../shared/giphy';\n\nclass RoundCountdown extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinitialSecondsRemaining: 30\n\t\t};\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.setState({ initialSecondsRemaining: this.props.secondsRemaining });\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<section className=\"hero is-light is-medium\">\n\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">Round { this.props.roundNumber}</h2>\n\t\t\t\t\t\t<h1 className=\"title is-size-5-mobile is-spaced\">&quot;{this.props.roundName}&quot;</h1>\n\t\t\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">will start in</h2>\n\n\t\t\t\t\t\t<h1 className={(this.props.secondsRemaining <= this.state.initialSecondsRemaining ? 'has-text-primary' : '')+ ' title is-size-5-mobile is-spaced'}>\n\t\t\t\t\t\t\t{this.props.secondsRemaining}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">seconds!</h2>\n\t\t\t\t\t\t{ this.props.secondsRemaining <= this.state.initialSecondsRemaining &&\n\t\t\t\t\t\t\t\t\t<progress className=\"progress is-primary\" value={this.state.initialSecondsRemaining-this.props.secondsRemaining} max={this.state.initialSecondsRemaining}></progress>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Giphy tag={'excitement'} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nRoundCountdown.propTypes = {\n\tsecondsRemaining: PropTypes.number.isRequired,\n\troundName: PropTypes.string.isRequired,\n\troundNumber: PropTypes.number.isRequired\n};\n\nexport default RoundCountdown;","import React from 'react';\nimport Giphy from '../../shared/giphy';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ExhaustedRound = (props) =>{\n\tlet scoreForThisRound = 0;\n\tlet roundScore = props.playerStatus.scoresByRoundInstanceId.filter(a => a[0] == props.roundInstanceId);\n\tif(roundScore && roundScore.length > 0 && roundScore[0][1]){\n\t\tscoreForThisRound = parseInt(roundScore[0][1]);\n\t}\n\n\treturn(\n\t\t<section className=\"hero is-light is-medium\">\n\t\t\t<div className=\"hero-body\">\n\t\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">Hooray!</h2>\n\t\t\t\t\t<h1 className=\"title is-size-5-mobile has-text-success is-spaced\">You&apos;ve answered every single question.</h1>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile is-spaced\">\n\t\t\t\t\t\tThis round you scored <span className={'is-size-4 is-size-6-mobile ' + scoreForThisRound > 0 ? 'has-text-success' : 'has-text-danger' }>{ scoreForThisRound }</span>\n\t\t\t\t\t\t{ scoreForThisRound == props.playerStatus.totalScore ? '.' :\n\t\t\t\t\t\t\t<span> and your total score is <span className={'is-size-4 is-size-6-mobile ' + props.playerStatus.totalScore > 0 ? 'has-text-success' : 'has-text-danger' }>{props.playerStatus.totalScore}</span> </span> }\n\t\t\t\t\t</h3>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile is-spaced\">Chill out until the end of the round.</h3>\n\t\t\t\t\t<h3 className=\"subtitle is-size-6-mobile\">(there&apos;s <Moment fromNow ago>{props.endTime}</Moment> to go).</h3>\n\t\t\t\t\t<Giphy tag={'relax'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>);};\n\nExhaustedRound.propTypes = {\n\troundInstanceId: PropTypes.number.isRequired,\n\tendTime: PropTypes.string.isRequired,\n\tplayerStatus: PropTypes.object.isRequired\n};\n\nexport default ExhaustedRound;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst RoundBanner = (props) => {\n\n\treturn(\n\t\t<section className=\"notification is-dark is-marginless\"  style={{background: props.team.colour}}>\n\t\t\t<h3 className=\"subtitle has-text-weight-bold is-size-5 is-size-6-mobile\" style={{marginBottom:'0.5rem'}}>\n\t\t\t\t\t\tRound { props.round.roundNumber }: &quot;{props.round.name}&quot;\n\t\t\t</h3>\n\t\t\t<h2 className=\"subtitle is-size-5 is-size-6-mobile\">\n\t\t\t\t\tTime Remaining: <Moment fromNow ago>{props.round.endTime}</Moment>\n\t\t\t</h2>\n\t\t</section>\n\t);};\n\nRoundBanner.propTypes = {\n\tround: PropTypes.object.isRequired,\n\tteam: PropTypes.object.isRequired\n};\n\nexport default RoundBanner;","import 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst MathsString = ({ inputString, extraClasses }) => (\n\t<span className={extraClasses}>\n\t\t<TeX>{inputString}</TeX>\n\t</span>\n);\n\nexport default MathsString;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MathsString from '../../shared/maths_string';\n\nconst QuestionText = (props) => (\n\t<div>\n\t\t<div className='notification is-light is-marginless has-text-centered'>\n\t\t\t<h2 className='subtitle is-size-6-mobile'>\n\t\t\t\t{props.question.prompt}\n\t\t\t</h2>\n\t\t</div>\n\t\t<section className='notification is-dark is-bold has-text-centered'>\n\t\t\t{props.question.parseAsMaths && (\n\t\t\t\t<MathsString\n\t\t\t\t\tinputString={props.question.question}\n\t\t\t\t\textraClasses='is-size-2 is-size-5-mobile'\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!props.question.parseAsMaths && (\n\t\t\t\t<span className='is-size-2 is-size-5-mobile'>\n\t\t\t\t\t{props.question.question}\n\t\t\t\t</span>\n\t\t\t)}\n\n\t\t\t{/*<h2 className=\"subtitle\">Question:</h2>*/}\n\t\t\t{/* <div className=\"title\" dangerouslySetInnerHTML={ {__html: props.questionHtml }}/> */}\n\t\t</section>\n\t</div>\n);\n\nQuestionText.propTypes = {\n\tquestion: PropTypes.object.isRequired,\n};\n\nexport default QuestionText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionText from './question_text';\nimport Giphy from '../../shared/giphy';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaHandPointRight,\n\tfaHandPointLeft,\n} from '@fortawesome/free-solid-svg-icons';\nimport MathsString from '../../shared/maths_string';\n\nconst AnsweredQuestion = (props) => {\n\tlet question = props.question;\n\tlet answeredCorrectly =\n\t\tquestion.submittedIndex != null &&\n\t\tNumber.isInteger(question.submittedIndex) &&\n\t\tquestion.correctIndex != null &&\n\t\tNumber.isInteger(question.correctIndex) &&\n\t\tquestion.submittedIndex === question.correctIndex;\n\treturn (\n\t\t<div>\n\t\t\t<QuestionText question={props.question} />\n\t\t\t{props.question.answers.map((answer, i) => (\n\t\t\t\t<div key={i} className='quizanswer'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'button is-size-4 is-size-6-mobile is-medium is-fullwidth ' +\n\t\t\t\t\t\t\t(question.correctIndex === i\n\t\t\t\t\t\t\t\t? ' is-success '\n\t\t\t\t\t\t\t\t: props.clickedIndex === i\n\t\t\t\t\t\t\t\t? ' is-danger '\n\t\t\t\t\t\t\t\t: ' is-dark ')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\tstyle={{ whiteSpace: 'normal', height: '100%' }}\n\t\t\t\t\t\tvalue={i}>\n\t\t\t\t\t\t{props.clickedIndex === i && (\n\t\t\t\t\t\t\t<span className='tag is-black is-pulled-left answer-tag-left'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHandPointRight} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{props.question.parseAsMaths && (\n\t\t\t\t\t\t\t<MathsString inputString={answer} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!props.question.parseAsMaths && <span>{answer}</span>}\n\t\t\t\t\t\t{props.clickedIndex === i && (\n\t\t\t\t\t\t\t<span className='tag is-black is-pulled-right answer-tag-right'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHandPointLeft} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\t'notification is-marginless has-text-centered ' +\n\t\t\t\t\t(answeredCorrectly ? 'is-success' : 'is-danger')\n\t\t\t\t}>\n\t\t\t\t<h1\n\t\t\t\t\tclassName='title is-spaced is-size-3 is-size-5-mobile '\n\t\t\t\t\tstyle={{ marginTop: '0.5rem' }}>\n\t\t\t\t\t{answeredCorrectly ? 'CORRECT' : 'INCORRECT'}\n\t\t\t\t</h1>\n\t\t\t\t<h2 className='subtitle is-spaced is-size-5 is-size-6-mobile '>\n\t\t\t\t\tYou {answeredCorrectly ? 'gained' : 'lost'}{' '}\n\t\t\t\t\t<span className='has-text-weight-bold is-size-4 is-size-5-mobile '>\n\t\t\t\t\t\t{Math.abs(question.pointsEarned)}\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tpoints.{' '}\n\t\t\t\t</h2>\n\t\t\t\t<button\n\t\t\t\t\tclassName='button is-medium is-size-6-mobile is-fullwidth is-warning'\n\t\t\t\t\tonClick={props.onClickNextQuestion}>\n\t\t\t\t\tNEXT QUESTION\n\t\t\t\t</button>\n\t\t\t\t<Giphy tag={answeredCorrectly ? 'celebration' : 'sad'} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nAnsweredQuestion.propTypes = {\n\tquestion: PropTypes.object.isRequired,\n\tclickedIndex: PropTypes.number.isRequired,\n\tonClickNextQuestion: PropTypes.func.isRequired,\n};\n\nexport default AnsweredQuestion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionText from './question_text';\nimport MathsString from '../../shared/maths_string';\n\nconst UnansweredQuestion = (props) => (\n\t<div>\n\t\t<QuestionText question={props.question} />\n\t\t{props.question.answers.map((answer, i) => (\n\t\t\t<div key={i} className='quizanswer'>\n\t\t\t\t<button\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'button is-size-4 is-size-6-mobile is-medium is-fullwidth is-info '\n\t\t\t\t\t}\n\t\t\t\t\tdisabled={props.answerClicked}\n\t\t\t\t\tvalue={i}\n\t\t\t\t\tstyle={{ whiteSpace: 'normal', height: '100%' }}\n\t\t\t\t\tonClick={() => props.onClickAnswer(i)}>\n\t\t\t\t\t{props.question.parseAsMaths && (\n\t\t\t\t\t\t<MathsString inputString={answer} />\n\t\t\t\t\t)}\n\t\t\t\t\t{!props.question.parseAsMaths && <span>{answer}</span>}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t))}\n\t</div>\n);\n\nUnansweredQuestion.propTypes = {\n\tquestion: PropTypes.object.isRequired,\n\tanswerClicked: PropTypes.bool.isRequired,\n\tonClickAnswer: PropTypes.func.isRequired,\n};\n\nexport default UnansweredQuestion;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { FlexibleHeightXYPlot } from 'react-vis';\n\nexport default class FadeUp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowUntil: null,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (nextProps.showUntil != prevState.showUntil) {\n\t\t\tlet now = moment();\n\n\t\t\treturn {\n\t\t\t\tbeginTime: now,\n\t\t\t\tduration: nextProps.showUntil.diff(now),\n\t\t\t\tshowUntil: nextProps.showUntil,\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender() {\n\t\tlet now = moment();\n\t\tlet opacity = 0;\n\t\tlet fractionThrough = 0;\n\n\t\tif (this.state.beginTime && this.state.duration) {\n\t\t\tlet progress = now.diff(this.state.beginTime);\n\t\t\tfractionThrough = progress / this.state.duration;\n\t\t\topacity = 1 - fractionThrough;\n\t\t}\n\t\t// let show = now.isBefore(this.state.showUntil);\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'content is-overlay has-text-centered is-size-4 has-text-weight-bold ' +\n\t\t\t\t\t\t(this.props.success\n\t\t\t\t\t\t\t? 'has-background-success'\n\t\t\t\t\t\t\t: 'has-background-danger')\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransition: `opacity .7s ease-in-out`,\n\t\t\t\t\t\topacity: opacity,\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t<span className=''>\n\t\t\t\t\t\t<span className='is-size-2'>{this.props.content}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FadeUp from '../../shared/fade_up';\n\nexport default class LiveScore extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpreviousTotalScore: props.playerStatus.totalScore,\n\t\t\tchangeInTotalScore: null,\n\t\t\tshowAnimationUntil: null,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tconst showAnimationForSeconds = 1;\n\n\t\tif (nextProps.playerStatus.totalScore != prevState.previousTotalScore) {\n\t\t\tlet change =\n\t\t\t\tnextProps.playerStatus.totalScore -\n\t\t\t\t(prevState.previousTotalScore\n\t\t\t\t\t? prevState.previousTotalScore\n\t\t\t\t\t: 0);\n\n\t\t\treturn {\n\t\t\t\tpreviousTotalScore: nextProps.playerStatus.totalScore,\n\t\t\t\tchangeInTotalScore: change,\n\t\t\t\tshowAnimationUntil: moment().add(showAnimationForSeconds, 's'),\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trender() {\n\t\tlet currentScore = 0;\n\n\t\tlet roundScore = this.props.playerStatus.scoresByRoundInstanceId.find(\n\t\t\t(rs) => rs[0]?.toString() === this.props.roundInstanceId.toString()\n\t\t);\n\n\t\tif (roundScore && roundScore.length > 0) {\n\t\t\tcurrentScore = roundScore[1] ?? 0;\n\t\t}\n\n\t\tlet showChangeAnimation = this.state.changeInTotalScore !== 0;\n\n\t\tlet success = this.state.changeInTotalScore > 0;\n\t\treturn (\n\t\t\t<div className='notification is-info is-clearfix'>\n\t\t\t\t<h1\n\t\t\t\t\tclassName='title is-size-5 is-size-6-mobile py-2'\n\t\t\t\t\tstyle={{ marginBottom: 0 }}>\n\t\t\t\t\tYour Score This Round:{' '}\n\t\t\t\t\t<span className='has-text-weight-bold  has-text-warning'>\n\t\t\t\t\t\t{currentScore}\n\t\t\t\t\t</span>\n\t\t\t\t</h1>\n\t\t\t\t<h1\n\t\t\t\t\tclassName='title is-size-5 is-size-6-mobile py-2'\n\t\t\t\t\tstyle={{ marginBottom: 0 }}>\n\t\t\t\t\tYour Total Score:{' '}\n\t\t\t\t\t<span className='has-text-weight-bold has-text-warning'>\n\t\t\t\t\t\t{this.props.playerStatus.totalScore\n\t\t\t\t\t\t\t? this.props.playerStatus.totalScore\n\t\t\t\t\t\t\t: 0}\n\t\t\t\t\t</span>\n\t\t\t\t</h1>\n\t\t\t\t{showChangeAnimation && (\n\t\t\t\t\t<FadeUp\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t? '+' + this.state.changeInTotalScore\n\t\t\t\t\t\t\t\t: this.state.changeInTotalScore\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsuccess={success}\n\t\t\t\t\t\tshowUntil={this.state.showAnimationUntil}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLiveScore.propTypes = {\n\tplayerStatus: PropTypes.object.isRequired,\n\troundInstanceId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst EndOfRoundCountdown = (props) => {\n\tlet countdownMax = 30000;\n\tlet endTime = moment(props.endTime);\n\tlet diffInMs = endTime.diff(moment());\n\tlet showCountdown = false;\n\tif (diffInMs < countdownMax) {\n\t\tshowCountdown = true;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{showCountdown && (\n\t\t\t\t<div\n\t\t\t\t\tclassName='notification is-warning'\n\t\t\t\t\tstyle={{ marginTop: '0.8rem' }}>\n\t\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t\t<h2 className='subtitle is-size-6-mobile'>\n\t\t\t\t\t\t\tNot long left!\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<progress\n\t\t\t\t\t\t\t\tclassName='progress is-primary'\n\t\t\t\t\t\t\t\tvalue={diffInMs}\n\t\t\t\t\t\t\t\tmax={countdownMax}></progress>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nEndOfRoundCountdown.propTypes = {\n\tendTime: PropTypes.string.isRequired,\n};\n\nexport default EndOfRoundCountdown;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { BounceLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\nconst BounceLoaderWrapper = (props) => (\n\t<div\n\t\tstyle={{\n\t\t\theight: '50px',\n\t\t\ttextAlign: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t}}>\n\t\t<BounceLoader color={props.color ? props.color : '#dddddd'} />\n\t</div>\n);\n\nBounceLoaderWrapper.propTypes = {\n\tcolor: PropTypes.string,\n};\n\nexport default BounceLoaderWrapper;\n","import React from 'react';\nimport BounceLoaderWrapper from '../../shared/bounce_loader_wrapped';\n\nconst LoadingQuestion = () => (\n\t<div className='notification is-light'>\n\t\t<div className='content has-text-centered py-6'>\n\t\t\t<h2 className='subtitle is-size-6-mobile'>\n\t\t\t\tthinking of question...\n\t\t\t</h2>\n\t\t\t<BounceLoaderWrapper />\n\t\t</div>\n\t</div>\n);\n\nexport default LoadingQuestion;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ExhaustedRound from './exhausted';\nimport RoundBanner from './round_banner';\nimport AnsweredQuestion from './answered_question';\nimport UnansweredQuestion from './unanswered_question';\nimport LiveScore from './live_score';\nimport EndOfRoundCountdown from './end_of_round_countdown';\nimport LoadingQuestion from './loading_question';\n\nclass LiveRound extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onClickAnswer = this.onClickAnswer.bind(this);\n\t\tthis.pullQuestion = this.pullQuestion.bind(this);\n\n\t\tthis.state = { answerClicked: false, clickedIndex: -1 };\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.pullQuestion();\n\t}\n\n\tpullQuestion() {\n\t\tthis.setState({ answerClicked: false, clickedIndex: -1 });\n\t\tthis.props.round.pullNextQuestion(this.props.round);\n\t}\n\n\tonClickAnswer(clickedIndex) {\n\t\tthis.setState({ answerClicked: true, clickedIndex: clickedIndex });\n\t\tthis.props.round.submitAnswer(this.props.round, clickedIndex);\n\t}\n\n\trender() {\n\t\tlet question = this.props.round.playerQuestion;\n\t\tlet answered = false;\n\t\tlet exhausted = this.props.round.exhausted;\n\n\t\tif (question) {\n\t\t\tanswered = question.answerReceived != null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='live-round'>\n\t\t\t\t<RoundBanner\n\t\t\t\t\tround={this.props.round}\n\t\t\t\t\tteam={this.props.player.team}\n\t\t\t\t/>\n\t\t\t\t<LiveScore\n\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\troundInstanceId={this.props.round.id}\n\t\t\t\t/>\n\t\t\t\t{exhausted && (\n\t\t\t\t\t<ExhaustedRound\n\t\t\t\t\t\troundInstanceId={this.props.round.id}\n\t\t\t\t\t\tendTime={this.props.round.endTime}\n\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!exhausted && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!question && <LoadingQuestion />}\n\t\t\t\t\t\t{question && !answered && (\n\t\t\t\t\t\t\t<UnansweredQuestion\n\t\t\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\t\t\tclickedIndex={this.state.clickedIndex}\n\t\t\t\t\t\t\t\tonClickAnswer={this.onClickAnswer}\n\t\t\t\t\t\t\t\tanswerClicked={this.state.answerClicked}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{question && answered && (\n\t\t\t\t\t\t\t<AnsweredQuestion\n\t\t\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\t\t\tclickedIndex={this.state.clickedIndex}\n\t\t\t\t\t\t\t\tonClickNextQuestion={this.pullQuestion}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<EndOfRoundCountdown endTime={this.props.round.endTime} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLiveRound.propTypes = {\n\tround: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tplayerStatus: PropTypes.object.isRequired,\n};\n\nexport default LiveRound;\n","import React, { Component } from 'react';\nimport RoundCountdown from './round_countdown';\nimport PropTypes from 'prop-types';\nimport LiveRound from './live_round/live_round';\n\nclass NextRound extends Component {\n\n\tstatic propTypes = {\n\t\tround: PropTypes.object.isRequired,\n\t\tplayer: PropTypes.object.isRequired,\n\t\tsession: PropTypes.object.isRequired,\n\t\tplayerStatus: PropTypes.object.isRequired\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t!this.props.round.isLive && <RoundCountdown roundName={this.props.round.name} roundNumber={this.props.round.roundNumber} secondsRemaining={this.props.round.secondsRemaining} />\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.round.isLive && <LiveRound round={this.props.round}\n\t\t\t\t\t\tplayer ={this.props.player}\n\t\t\t\t\t\tsession={this.props.session}\n\t\t\t\t\t\tplayerStatus={this.props.playerStatus} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NextRound;","import React from 'react';\n\nconst TeamStatus = (props) => {\n\tlet show =\n\t\tprops.teamStatus &&\n\t\tprops.teamStatus.filter((t) => t.teamId != null).length > 0 &&\n\t\tprops.teams &&\n\t\tprops.teams.length > 0;\n\n\treturn (\n\t\t<div className='tile is-parent is-rounded' style={{ padding: '1rem' }}>\n\t\t\t{show &&\n\t\t\t\tprops.teamStatus &&\n\t\t\t\tprops.teamStatus\n\t\t\t\t\t.filter((t) => t.playerCount > 0)\n\t\t\t\t\t.map((ts, i) => {\n\t\t\t\t\t\tconst team = props.teams.filter(\n\t\t\t\t\t\t\t(t) => t.id === ts.teamId\n\t\t\t\t\t\t)[0];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tclassName='tile is-child has-text-white is-size-4 is-size-6-mobile is-rounded '\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: team.colour,\n\t\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<span className='has-text-weight-bold'>\n\t\t\t\t\t\t\t\t\tTeam {team.name}\n\t\t\t\t\t\t\t\t\t{/* {ts.playerCount} player */}\n\t\t\t\t\t\t\t\t\t{/* {ts.playerCount > 1 ? 's' : ''}:{' '} */}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{ts.playerNames &&\n\t\t\t\t\t\t\t\t\tArray.isArray(ts.playerNames) && (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{ts.playerNames.map((name) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`team-${i}-${name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='is-size-5 is-size-6-mobile mx-3 my-1 py-1'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<span className='has-text-weight-bold is-size-3 is-size-5-mobile'>\n\t\t\t\t\t\t\t\t\t{ts.totalScore ? ts.totalScore : 0} points\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default TeamStatus;\n","import React from 'react';\n\nconst PlayerRounds = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t{/* <h3 className='subtitle is-size-4 is-size-6-mobile'>Your Scores</h3> */}\n\t\t\t<table className='table'>\n\t\t\t\t<thead></thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.completedRounds.map((completedRound, i) => {\n\t\t\t\t\t\tlet roundScore = 0;\n\t\t\t\t\t\tlet roundId = completedRound.id;\n\t\t\t\t\t\tprops.playerStatus.scoresByRoundInstanceId.forEach(\n\t\t\t\t\t\t\t(round, j) => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tround[0].toString() === roundId.toString()\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\troundScore = round[1];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td style={{ minWidth: '50%' }}>\n\t\t\t\t\t\t\t\t\tRound {completedRound.roundNumber}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{completedRound.name}</td>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\troundScore > 0\n\t\t\t\t\t\t\t\t\t\t\t? 'has-text-success'\n\t\t\t\t\t\t\t\t\t\t\t: 'has-text-danger'\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t{roundScore || '-'}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default PlayerRounds;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WelcomeBanner from './welcome_banner';\nimport TeamStatus from './team_status';\nimport PlayerRounds from './player_rounds_table';\n\nconst BetweenRounds = (props) => {\n\tlet completedRounds = props.rounds.slice(0, props.finishedRounds);\n\n\treturn (\n\t\t<div>\n\t\t\t<WelcomeBanner\n\t\t\t\tteam={props.player.team}\n\t\t\t\tplayerName={props.player.name}\n\t\t\t/>\n\t\t\t{props.finishedRounds > 0 && (\n\t\t\t\t<div className=''>\n\t\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t\t{props.playerStatus &&\n\t\t\t\t\t\t\tprops.playerStatus.teamStatus && (\n\t\t\t\t\t\t\t\t<TeamStatus\n\t\t\t\t\t\t\t\t\tteamStatus={props.playerStatus.teamStatus}\n\t\t\t\t\t\t\t\t\tplayerTeam={props.player.team}\n\t\t\t\t\t\t\t\t\tteams={props.teams}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h2 className='subtitle is-size-6-mobile bo'>\n\t\t\t\t\t\t\tYour personal score is{' '}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t(props.playerStatus.totalScore < 0\n\t\t\t\t\t\t\t\t\t\t? 'has-text-danger'\n\t\t\t\t\t\t\t\t\t\t: 'has-text-success') +\n\t\t\t\t\t\t\t\t\t' is-size-3 is-size-5-mobile has-text-weight-bold'\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{props.playerStatus.totalScore\n\t\t\t\t\t\t\t\t\t? props.playerStatus.totalScore\n\t\t\t\t\t\t\t\t\t: 0}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tafter{' '}\n\t\t\t\t\t\t\t<span className='has-text-info is-size-4 is-size-5-mobile has-text-weight-bold'>\n\t\t\t\t\t\t\t\t{props.finishedRounds}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tround{props.finishedRounds > 1 ? 's' : ''}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h3 className='subtitle is-size-6-mobile'>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t(props.playerStatus.correctAnswers > 0\n\t\t\t\t\t\t\t\t\t\t? 'has-text-success'\n\t\t\t\t\t\t\t\t\t\t: 'has-text-warning') +\n\t\t\t\t\t\t\t\t\t' is-size-4 is-size-5-mobile has-text-weight-bold'\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{props.playerStatus.correctAnswers}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tout of{' '}\n\t\t\t\t\t\t\t<span className='has-text-info is-size-4 is-size-5-mobile has-text-weight-bold'>\n\t\t\t\t\t\t\t\t{props.playerStatus.questionsAnswered}\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\tquestions correct\n\t\t\t\t\t\t\t<span className='has-text-info'>\n\t\t\t\t\t\t\t\t{props.playerStatus.questionsAnswered !== 0\n\t\t\t\t\t\t\t\t\t? ' (' +\n\t\t\t\t\t\t\t\t\t  Math.round(\n\t\t\t\t\t\t\t\t\t\t\t100 *\n\t\t\t\t\t\t\t\t\t\t\t\t(props.playerStatus\n\t\t\t\t\t\t\t\t\t\t\t\t\t.correctAnswers /\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.playerStatus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.questionsAnswered)\n\t\t\t\t\t\t\t\t\t  ) +\n\t\t\t\t\t\t\t\t\t  '%)'\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<p className='has-text-black'>\n\t\t\t\t\t\t\tHere&apos;s how you did in each round so far:\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<PlayerRounds\n\t\t\t\t\t\t\tplayerStatus={props.playerStatus}\n\t\t\t\t\t\t\tcompletedRounds={completedRounds}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className='has-text-black has-text-weight-bold mt-6'>\n\t\t\t\t\t\t\tGood luck in the next round!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{props.finishedRounds === 0 && (\n\t\t\t\t<div className='notification is-light'>\n\t\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t\t<h2 className='subtitle has-text-success is-size-5-mobile'>\n\t\t\t\t\t\t\tYou&apos;re in!\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h2 className='subtitle is-size-5-mobile'>\n\t\t\t\t\t\t\tStay tuned, the first round will be along shortly...\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{props.playerStatus &&\n\t\t\t\t\t\t\tprops.playerStatus.teamStatus && (\n\t\t\t\t\t\t\t\t<TeamStatus\n\t\t\t\t\t\t\t\t\tteamStatus={props.playerStatus.teamStatus}\n\t\t\t\t\t\t\t\t\tplayerTeam={props.player.team}\n\t\t\t\t\t\t\t\t\tteams={props.teams}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nBetweenRounds.propTypes = {\n\tfinishedRounds: PropTypes.number.isRequired,\n\tplayerStatus: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\trounds: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n};\n\nexport default BetweenRounds;\n","import React from 'react';\nimport Giphy from '../shared/giphy';\nimport BounceLoaderWrapper from '../shared/bounce_loader_wrapped';\n\nconst RoundFinished = () => (\n\t<section className='hero is-light is-medium'>\n\t\t<div className='hero-body'>\n\t\t\t<div className='content has-text-centered'>\n\t\t\t\t<h1 className='title is-size-5-mobile is-spaced'>\n\t\t\t\t\tRound Finished!\n\t\t\t\t</h1>\n\t\t\t\t<h2 className='subtitle is-size-6-mobile is-spaced'>\n\t\t\t\t\tLet&apos;s see how you did...\n\t\t\t\t</h2>\n\t\t\t\t<BounceLoaderWrapper />\n\t\t\t\t<br />\n\t\t\t\t<Giphy tag={'clock'} />\n\t\t\t</div>\n\t\t</div>\n\t</section>\n);\n\nexport default RoundFinished;\n","import React from 'react';\nimport BounceLoaderWrapper from '../shared/bounce_loader_wrapped';\n\nconst SessionLoading = () => (\n\t<div>\n\t\t<section className='hero is-light is-medium'>\n\t\t\t<div className='hero-body'>\n\t\t\t\t<div className='content has-text-centered'>\n\t\t\t\t\t<h1 className='title has-text-black is-size-5-mobile'>\n\t\t\t\t\t\tloading...\n\t\t\t\t\t</h1>\n\t\t\t\t\t<BounceLoaderWrapper />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n);\n\nexport default SessionLoading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NextRound from './next_round';\nimport BetweenRounds from './between_rounds';\nimport RoundFinished from './round_finished';\nimport SessionLoading from './session_loading';\n\n\nclass LiveSession extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet round = {};\n\t\tlet lastRound = {};\n\n\t\tlet allInstances = this.props.rounds.allRoundInstances;\n\t\tlet nextRoundIndexes = this.props.rounds.nextRoundIndexes;\n\n\t\tlet finishedRounds = (allInstances.length - nextRoundIndexes.length);\n\n\t\tif(nextRoundIndexes.length > 0){\n\t\t\t// we have an actual round object to pass down\n\t\t\tround = allInstances[nextRoundIndexes[0]];\n\t\t}\n\n\t\tlet justFinished = false;\n\n\t\tif(finishedRounds > 0){\n\t\t\t// let's see if a round has JUST finished\n\t\t\tlastRound = allInstances[finishedRounds - 1];\n\t\t\tjustFinished = lastRound.justFinished;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ justFinished && <RoundFinished round={lastRound} />}\n\t\t\t\t{!justFinished &&\n\t\t\t\t<div>\n\t\t\t\t\t{ !this.props.initialLoadComplete &&\n\t\t\t\t\t\t<SessionLoading />\n\t\t\t\t\t}\n\n\t\t\t\t\t{(this.props.initialLoadComplete) &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ nextRoundIndexes.length == 0 &&\n\t\t\t\t\t\t\t<BetweenRounds player={this.props.player}\n\t\t\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t\t\t\tsessionName={this.props.session.name}\n\t\t\t\t\t\t\t\tfinishedRounds={finishedRounds}\n\t\t\t\t\t\t\t\tisLoadingRounds={this.props.rounds.isLoading}\n\t\t\t\t\t\t\t\trounds={this.props.rounds.allRoundInstances}\n\t\t\t\t\t\t\t\tteams={this.props.session.teams}\n\t\t\t\t\t\t\t/> }\n\n\t\t\t\t\t\t{\t(nextRoundIndexes.length > 0) &&\n\t\t\t\t\t\t<NextRound round={ round }\n\t\t\t\t\t\t\tplayer={this.props.player}\n\t\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t\t\tsession={this.props.session} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t</div> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLiveSession.propTypes = {\n\tinitialLoadComplete: PropTypes.bool.isRequired,\n\trounds: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tplayerStatus: PropTypes.object.isRequired\n};\n\nexport default LiveSession;","import React from 'react';\nimport Giphy from '../shared/giphy';\nimport BounceLoaderWrapper from '../shared/bounce_loader_wrapped';\n\nconst AssigningTeam = () =>\n\t<section className=\"hero is-light is-medium\">\n\t\t<div className=\"hero-body\">\n\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t<h2 className=\"subtitle has-text-grey is-size-6-mobile  is-spaced\">new player detected</h2>\n\t\t\t\t<h1 className=\"title has-text-grey-dark is-size-5-mobile  is-spaced\">analysing your personality</h1>\n\t\t\t\t<progress className=\"progress is-primary\" value={Math.random() * 10} max={10}></progress>\n\t\t\t\t<BounceLoaderWrapper color=\"#dddddd\" />\n\t\t\t\t<Giphy tag={'thinking'} />\n\t\t\t</div>\n\t\t</div>\n\t</section>;\n\nexport default AssigningTeam;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Giphy from '../shared/giphy';\nimport BounceLoaderWrapper from '../shared/bounce_loader_wrapped';\n\n\nconst TeamAssigned = (props) =>\n\t<section className=\"hero is-dark is-medium\" style={{background: props.team.colour }}>\n\t\t<div className=\"hero-body\">\n\t\t\t<div className=\"content has-text-centered\">\n\t\t\t\t<h2 className=\"subtitle is-size-6-mobile is-spaced\">Congratulations!</h2>\n\t\t\t\t<h1 className=\"title is-size-5-mobile is-spaced\">You have been assigned to Team {props.team.name}</h1>\n\t\t\t\t<h2 className=\"subtitle is-size-5 is-size-6-mobile is-spaced\">joining now</h2>\n\t\t\t\t<BounceLoaderWrapper color = '#dddddd' />\n\t\t\t\t<Giphy tag={'celebration'} colour='light' />\n\t\t\t</div>\n\t\t</div>\n\t</section>;\n\nTeamAssigned.propTypes = {\n\tteam: PropTypes.object.isRequired\n};\n\nexport default TeamAssigned;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport WaitingForSession from './waiting_for_session';\nimport LiveSession from './live_session';\nimport AssigningTeam from './assigning_team';\nimport TeamAssigned from './team_assigned';\nimport moment from 'moment';\n\nclass Session extends Component {\n\trender() {\n\t\tlet showTeamAssignedUntil = this.props.showTeamAssignedScreenUntil;\n\t\tlet showTeamAssignedScreen =\n\t\t\tshowTeamAssignedUntil && moment().isBefore(showTeamAssignedUntil);\n\n\t\treturn (\n\t\t\t<section className='section'>\n\t\t\t\t{!this.props.player.team && <AssigningTeam />}\n\t\t\t\t{showTeamAssignedScreen && (\n\t\t\t\t\t<TeamAssigned team={this.props.player.team} />\n\t\t\t\t)}\n\t\t\t\t{!showTeamAssignedScreen && this.props.player.team && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!!this.props.session.isLive && (\n\t\t\t\t\t\t\t<LiveSession\n\t\t\t\t\t\t\t\tinitialLoadComplete={\n\t\t\t\t\t\t\t\t\tthis.props.initialLoadComplete\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsession={this.props.session}\n\t\t\t\t\t\t\t\tplayer={this.props.player}\n\t\t\t\t\t\t\t\trounds={this.props.rounds}\n\t\t\t\t\t\t\t\tplayerStatus={this.props.playerStatus}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{!this.props.session.isLive && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<WaitingForSession\n\t\t\t\t\t\t\t\t\tteam={this.props.player.team}\n\t\t\t\t\t\t\t\t\tplayerName={this.props.player.name}\n\t\t\t\t\t\t\t\t\tsessionName={this.props.session.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Session;\n\nSession.propTypes = {\n\tshowTeamAssignedScreenUntil: PropTypes.object,\n\tinitialLoadComplete: PropTypes.bool.isRequired,\n\trounds: PropTypes.object.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tplayer: PropTypes.object.isRequired,\n\tplayerStatus: PropTypes.object.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass SuccessIcon extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<span className={ this.props.position + ' icon is-small'}>\n\t\t\t\t{ this.props.success ? <FontAwesomeIcon icon={faCheck} style={{ color: 'green' }} /> : <FontAwesomeIcon icon={faTimes} style={{ color: 'red' }} />  }\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nexport default SuccessIcon;\n\nSuccessIcon.propTypes = {\n\tsuccess: PropTypes.bool.isRequired,\n\tposition: PropTypes.string\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SuccessIcon from '../shared/success_icon';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSuperscript } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nclass SessionForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.onChangePlayerName = this.onChangePlayerName.bind(this);\n\t\tthis.onChangeSessionName = this.onChangeSessionName.bind(this);\n\t}\n\n\tonChangePlayerName(e) {\n\t\tthis.props.handleChange(\n\t\t\te.target.value,\n\t\t\tthis.props.sessionForm.sessionName\n\t\t);\n\t}\n\n\tonChangeSessionName(e) {\n\t\tthis.props.handleChange(\n\t\t\tthis.props.sessionForm.playerName,\n\t\t\te.target.value\n\t\t);\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.props.handleSubmit();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form className='panel' style={{ marginTop: '3rem' }}>\n\t\t\t\t<fieldset className='panel-block px-0'>\n\t\t\t\t\t<legend\n\t\t\t\t\t\tclassName='px-6 py-2 has-background-warning-light has-text-dark'\n\t\t\t\t\t\tstyle={{ width: '100%' }}>\n\t\t\t\t\t\tWelcome.\n\t\t\t\t\t</legend>\n\t\t\t\t\t<div className='px-4 pb-4' style={{ width: '100%' }}>\n\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t<label className='label' htmlFor='playerName'>\n\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className='control has-icons-left has-icons-right'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t(this.props.sessionForm\n\t\t\t\t\t\t\t\t\t\t\t.isPlayerNameValid\n\t\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t\t: 'is-warning') + ' input'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tid='playerName'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\t\t\t\t\tvalue={this.props.sessionForm.playerName}\n\t\t\t\t\t\t\t\t\tonChange={this.onChangePlayerName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUser} />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\t\t\tsuccess={\n\t\t\t\t\t\t\t\t\t\tthis.props.sessionForm.isPlayerNameValid\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t<label className='label' htmlFor='sessionName'>\n\t\t\t\t\t\t\t\tEntry Word\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className='control has-icons-left has-icons-right'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid='sessionName'\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t(this.props.sessionForm\n\t\t\t\t\t\t\t\t\t\t\t.isSessionNameValid\n\t\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t\t: 'is-warning') + ' input'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder='Enter the word for this session'\n\t\t\t\t\t\t\t\t\tvalue={this.props.sessionForm.sessionName}\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeSessionName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSuperscript} />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\t\t\tsuccess={\n\t\t\t\t\t\t\t\t\t\tthis.props.sessionForm\n\t\t\t\t\t\t\t\t\t\t\t.isSessionNameValid\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='field has-text-centered'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t(this.props.sessionForm.isValid\n\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t: 'is danger') +\n\t\t\t\t\t\t\t\t\t' button ' +\n\t\t\t\t\t\t\t\t\t(this.props.sessionForm.isSubmitting\n\t\t\t\t\t\t\t\t\t\t? 'is-loading'\n\t\t\t\t\t\t\t\t\t\t: '')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t!this.props.sessionForm.isValid ||\n\t\t\t\t\t\t\t\t\tthis.props.sessionForm.isSubmitting\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={this.onSubmit}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\topacity: this.props.sessionForm\n\t\t\t\t\t\t\t\t\t\t\t.isSubmitting\n\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t: 1,\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tEnter!\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nSessionForm.propTypes = {\n\tsessionForm: PropTypes.object.isRequired,\n\thandleChange: PropTypes.func.isRequired,\n\thandleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SessionForm;\n","const prod = process.env.NODE_ENV === 'production';\n\nconst config = {\n\tisDev: !prod,\n\tsocket: {\n\t\tprotocol: !prod ? 'http' : 'https',\n\t\tport: !prod ? 4008 : 443,\n\t\taddress: !prod ? '192.168.1.100' : 'quizzler-server.herokuapp.com',\n\t},\n\tquiz: {\n\t\tshowRoundFinishedScreenForMilliseconds: 5000,\n\t\tshowTeamAssignedScreenForSeconds: 4,\n\t\tassignTeamForMilliseconds: 3000,\n\t},\n};\n\nexport default config;\n","import React from 'react';\n\nconst QuizExplanation = () => (\n\t<article className='message is-info' style={{ marginTop: '2rem' }}>\n\t\t<div className='message-header'>\n\t\t\t<p>What is this?</p>\n\t\t</div>\n\t\t<div className='message-body'>\n\t\t\tThis is for <strong>live interactive experiences</strong>.\n\t\t\t<p>\n\t\t\t\tIf you&apos;re attending a live session, enter your{' '}\n\t\t\t\t<strong>name</strong> and the <strong>entry word</strong> above,\n\t\t\t\tand enjoy!\n\t\t\t</p>\n\t\t</div>\n\t</article>\n);\n\nexport default QuizExplanation;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { faCircle, faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nconst ConnectionIndicator = ({ connected }) => (\n\t<div\n\t\tclassName='has-text-right'\n\t\tstyle={{\n\t\t\tposition: 'fixed',\n\t\t\tbottom: '1rem',\n\t\t\tleft: '1rem',\n\t\t}}>\n\t\t<FontAwesomeIcon\n\t\t\ticon={connected ? faCircle : faCircleNotch}\n\t\t\tstyle={{\n\t\t\t\tcolor: connected ? 'green' : 'red',\n\t\t\t}}\n\t\t/>\n\t</div>\n);\n\nexport default ConnectionIndicator;\n","import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Session from './session';\nimport SessionForm from './session_form';\nimport moment from 'moment';\nimport config from '../../config';\nimport QuizExplanation from './quiz_explanation';\nimport ConnectionIndicator from './connection_indicator';\n\nclass QuizLogin extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tlet sessionForm = {\n\t\t\tplayerName: '',\n\t\t\tsessionName: '',\n\t\t\tpreviousSubmission: '',\n\t\t\tisSubmitting: false,\n\t\t\thasSubmitted: false,\n\t\t\tisValid: false,\n\t\t\tisSessionNameValid: false,\n\t\t\tisPlayerNameValid: false,\n\t\t};\n\n\t\tif (config.isDev) {\n\t\t\tsessionForm = {\n\t\t\t\tplayerName: 'Neil',\n\t\t\t\tsessionName: 'Biscuit',\n\t\t\t\tpreviousSubmission: '',\n\t\t\t\tisValid: true,\n\t\t\t\tisSessionNameValid: true,\n\t\t\t\tisPlayerNameValid: true,\n\t\t\t};\n\t\t}\n\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\n\t\tconst socket = socketIOClient(socketAddress);\n\n\t\tsocket.on(\n\t\t\t'connect',\n\t\t\t(() => {\n\t\t\t\t// happens on first connection, and on subsequent reconnections\n\t\t\t\t// so each time we want to register for events\n\t\t\t\t// (this will join or rejoin the server-side session room, if we have one)\n\t\t\t\tsocket.emit(\n\t\t\t\t\t'quiz connection',\n\t\t\t\t\tthis.state.session,\n\t\t\t\t\tthis.state.player\n\t\t\t\t);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\t// then register for client events:\n\t\tsocket.on(\n\t\t\t'receive round instances',\n\t\t\t((instances) => {\n\t\t\t\tthis.setServerRoundInstances(instances);\n\t\t\t\tthis.getPlayerStatus();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'receive question',\n\t\t\t((playerQuestion) => {\n\t\t\t\tthis.receiveQuestion(playerQuestion);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'session flipped',\n\t\t\t((session) => {\n\t\t\t\tif (session && this.state.session) {\n\t\t\t\t\tthis.setState({ session: session });\n\t\t\t\t}\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'session ended',\n\t\t\t(() => {\n\t\t\t\tthis.reinitialiseState();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'player deleted',\n\t\t\t(() => {\n\t\t\t\tthis.reinitialiseState();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'receive player status',\n\t\t\t((status) => {\n\t\t\t\tthis.receivePlayerStatus(status);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'receive team assignment',\n\t\t\t((playerId, team) => {\n\t\t\t\tthis.receiveTeamAssignment(playerId, team);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'receive new team',\n\t\t\t((team) => {\n\t\t\t\tthis.receiveTeamReassignment(team);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'no more questions',\n\t\t\t((roundInstanceId) => {\n\t\t\t\tlet ids = this.state.exhaustedRoundInstanceIds;\n\t\t\t\tids.push(roundInstanceId);\n\t\t\t\tthis.setState({ exhaustedRoundInstanceIds: ids });\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'error loading question',\n\t\t\t((roundInstanceId) => {\n\t\t\t\tconsole.log('error loading question!');\n\t\t\t\tconst liveRound = this.state.rounds.allRoundInstances.find(\n\t\t\t\t\t(r) => r.isLive\n\t\t\t\t);\n\n\t\t\t\t// probably a temporary server glitch, wait a couple of seconds and try again\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (liveRound && liveRound.pullNextQuestion) {\n\t\t\t\t\t\tliveRound.pullNextQuestion(liveRound);\n\t\t\t\t\t}\n\t\t\t\t}, 5000);\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'disconnect',\n\t\t\t(() => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tlet rounds = {\n\t\t\tisLoading: false,\n\t\t\tserverRoundInstances: [],\n\t\t\tallRoundInstances: [],\n\t\t\tnextRoundIndexes: [],\n\t\t};\n\n\t\tthis.state = {\n\t\t\tinitial: {\n\t\t\t\tserverLoad: false,\n\t\t\t\tupdateAfterServerLoad: false,\n\t\t\t\tstatusAfterPlayerLoad: false,\n\t\t\t},\n\t\t\tsession: null,\n\t\t\tplayer: null,\n\t\t\tshowTeamAssignedScreenUntil: null,\n\t\t\tsessionForm: sessionForm,\n\t\t\tsocket: socket,\n\t\t\trounds: rounds,\n\t\t\tnextPlayerQuestion: null,\n\t\t\tanswerResponse: null,\n\t\t\texhaustedRoundInstanceIds: [],\n\t\t\tplayerStatus: {\n\t\t\t\tquestionsAnswered: 0,\n\t\t\t\tscore: 0,\n\t\t\t\tcorrectAnswers: 0,\n\t\t\t},\n\t\t\tstatusUpdateCounter: 0,\n\t\t};\n\n\t\tthis.handleSessionFormSubmit = this.handleSessionFormSubmit.bind(this);\n\t\tthis.handleSessionFormChange = this.handleSessionFormChange.bind(this);\n\t\tthis.isSessionFormValid = this.isSessionFormValid.bind(this);\n\t\tthis.isPlayerNameValid = this.isPlayerNameValid.bind(this);\n\t\tthis.isSessionNameValid = this.isSessionNameValid.bind(this);\n\n\t\tthis.loadRoundInstances = this.loadRoundInstances.bind(this);\n\t\tthis.updateRoundInstances = this.updateRoundInstances.bind(this);\n\t\tthis.setServerRoundInstances = this.setServerRoundInstances.bind(this);\n\n\t\tthis.getCurrentRoundScore = this.getCurrentRoundScore.bind(this);\n\n\t\tthis.reinitialiseState = this.reinitialiseState.bind(this);\n\n\t\tthis.pullNextQuestion = this.pullNextQuestion.bind(this);\n\t\tthis.receiveQuestion = this.receiveQuestion.bind(this);\n\t\tthis.submitAnswer = this.submitAnswer.bind(this);\n\t\tthis.receiveAnswerResponse = this.receiveAnswerResponse.bind(this);\n\t}\n\n\treinitialiseState() {\n\t\tlet rounds = {\n\t\t\tisLoading: false,\n\t\t\tserverRoundInstances: [],\n\t\t\tallRoundInstances: [],\n\t\t\tnextRoundIndexes: [],\n\t\t};\n\n\t\tthis.setState(function () {\n\t\t\treturn {\n\t\t\t\trounds: rounds,\n\t\t\t\tinitial: {\n\t\t\t\t\tserverLoad: false,\n\t\t\t\t\tupdateAfterServerLoad: false,\n\t\t\t\t\tstatusAfterPlayerLoad: false,\n\t\t\t\t},\n\t\t\t\tsession: null,\n\t\t\t\tplayer: null,\n\t\t\t\tshowTeamAssignedScreenUntil: null,\n\t\t\t\tnextPlayerQuestion: null,\n\t\t\t\tanswerResponse: null,\n\t\t\t\texhaustedRoundInstanceIds: [],\n\t\t\t\tplayerStatus: {\n\t\t\t\t\tquestionsAnswered: 0,\n\t\t\t\t\tscore: 0,\n\t\t\t\t\tcorrectAnswers: 0,\n\t\t\t\t},\n\t\t\t\tstatusUpdateCounter: 0,\n\t\t\t};\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 900);\n\t\tthis.loadRoundInstances();\n\t\tthis.getPlayerStatus();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\t\t// this checks if the server instances have changed\n\t\t// and also updates the rounds with 'time left' etc, so the round starts/ends in time\n\t\tthis.updateRoundInstances(this.state.rounds.serverRoundInstances);\n\n\t\tlet counter = this.state.statusUpdateCounter;\n\n\t\tif (\n\t\t\tcounter > 20 ||\n\t\t\t(!this.state.initial.statusAfterPlayerLoad && this.state.player)\n\t\t) {\n\t\t\t// check the player status every now and then\n\t\t\tthis.getPlayerStatus();\n\n\t\t\t// update round instances every now and then in case we weren't online when the change notification fired\n\t\t\tthis.loadRoundInstances();\n\t\t\tcounter = 0;\n\t\t}\n\n\t\tcounter++;\n\t\tthis.setState({ statusUpdateCounter: counter });\n\t}\n\n\tisRoundLive(round) {\n\t\tvar now = moment();\n\t\tvar startTime = moment(round.startTime);\n\t\tvar endTime = moment(round.endTime);\n\t\treturn startTime.isBefore(now) && now.isBefore(endTime);\n\t}\n\n\tgetSecondsRemainingBeforeRoundStart(round) {\n\t\tvar now = moment();\n\t\tvar start = moment(round.startTime);\n\t\treturn start.diff(now, 'seconds');\n\t}\n\n\tgetPlayerStatus() {\n\t\tif (this.state.session && this.state.player) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'pull player status',\n\t\t\t\tthis.state.session.id,\n\t\t\t\tthis.state.player.id\n\t\t\t);\n\t\t}\n\t}\n\n\treceivePlayerStatus(status) {\n\t\tlet initial = this.state.initial;\n\t\tinitial.statusAfterPlayerLoad = true;\n\n\t\tthis.setState({\n\t\t\tplayerStatus: status,\n\t\t\tinitial: initial,\n\t\t});\n\t}\n\n\tloadRoundInstances(sessionId) {\n\t\tif (\n\t\t\t!sessionId &&\n\t\t\tthis.state.session &&\n\t\t\tthis.state.session.id &&\n\t\t\tNumber.isInteger(this.state.session.id)\n\t\t) {\n\t\t\tsessionId = this.state.session.id;\n\t\t}\n\n\t\tif (!sessionId) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet rounds = this.state.rounds;\n\t\trounds.isLoading = true;\n\t\tthis.setState({ rounds: rounds });\n\t\tthis.state.socket.emit('pull round instances', sessionId);\n\t}\n\n\tsetServerRoundInstances(instances) {\n\t\tinstances.sort(function (i1, i2) {\n\t\t\tlet s1 = moment(i1.startTime);\n\t\t\tlet s2 = moment(i2.startTime);\n\t\t\treturn s1.isBefore(s2) ? -1 : s1.isAfter(s2) ? 1 : 0;\n\t\t});\n\n\t\tlet rounds = this.state.rounds;\n\t\trounds.serverRoundInstances = instances;\n\n\t\tlet initial = this.state.initial;\n\t\tinitial.serverLoad = true;\n\n\t\tthis.setState(function () {\n\t\t\treturn {\n\t\t\t\trounds: rounds,\n\t\t\t\tinitial: initial,\n\t\t\t};\n\t\t});\n\t}\n\n\tpullNextQuestion(round) {\n\t\tif (round && round.id) {\n\t\t\tlet rounds = this.state.rounds;\n\t\t\trounds.allRoundInstances.forEach((r) => {\n\t\t\t\tr.playerQuestion = null;\n\t\t\t});\n\n\t\t\tthis.setState(function () {\n\t\t\t\treturn {\n\t\t\t\t\trounds: rounds,\n\t\t\t\t\tnextPlayerQuestion: null,\n\t\t\t\t\tanswerResponse: null,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'pull question',\n\t\t\t\tround.id,\n\t\t\t\tround.platonicRoundIds,\n\t\t\t\tthis.state.player.id\n\t\t\t);\n\t\t}\n\t}\n\n\treceiveQuestion(playerQuestion) {\n\t\tif (playerQuestion && playerQuestion.roundInstanceId) {\n\t\t\tthis.setState({ nextPlayerQuestion: playerQuestion });\n\t\t} else {\n\t\t\tconsole.log('Error loading question');\n\n\t\t\tconst liveRound = this.state.rounds.allRoundInstances.find(\n\t\t\t\t(r) => r.isLive\n\t\t\t);\n\n\t\t\t// probably a temporary server glitch, wait a couple of seconds and try again\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (liveRound && liveRound.pullNextQuestion) {\n\t\t\t\t\tliveRound.pullNextQuestion(liveRound);\n\t\t\t\t}\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\tsubmitAnswer(round, answerIndex) {\n\t\tif (round && round.id && Number.isInteger(answerIndex)) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'answer question',\n\t\t\t\tround.playerQuestion.id,\n\t\t\t\tanswerIndex,\n\t\t\t\tthis.state.player.id,\n\t\t\t\t(response) => this.receiveAnswerResponse(response)\n\t\t\t);\n\t\t} else {\n\t\t\talert('yikes! unable to submit answer: ' + answerIndex);\n\t\t}\n\t}\n\n\tgetCurrentRoundScore(roundInstanceId) {\n\t\tlet score = 0;\n\t\tlet status = this.state.playerStatus;\n\t\tif (\n\t\t\tstatus &&\n\t\t\tstatus.scoresByRoundInstanceId &&\n\t\t\tstatus.scoresByRoundInstanceId.length > 0\n\t\t) {\n\t\t\tlet scoreByRoundId = this.state.playerStatus.scoresByRoundInstanceId.filter(\n\t\t\t\t(a) => a[0] == roundInstanceId\n\t\t\t);\n\t\t\tif (\n\t\t\t\tscoreByRoundId &&\n\t\t\t\tscoreByRoundId.length > 0 &&\n\t\t\t\tscoreByRoundId[0][1]\n\t\t\t) {\n\t\t\t\tscore = parseInt(scoreByRoundId[0][1]);\n\t\t\t}\n\t\t}\n\n\t\treturn score;\n\t}\n\n\treceiveAnswerResponse(response) {\n\t\tthis.getPlayerStatus();\n\t\tthis.setState({ answerResponse: response });\n\t}\n\n\tformatRoundNames(names) {\n\t\tif (!names) return '';\n\n\t\tvar outStr = '';\n\t\tif (names.length === 1) {\n\t\t\toutStr = names[0];\n\t\t} else if (names.length === 2) {\n\t\t\toutStr = names.join(' & ');\n\t\t} else if (names.length > 2) {\n\t\t\toutStr = names.slice(0, -1).join(', ') + ', & ' + names.slice(-1);\n\t\t}\n\t\treturn outStr;\n\t}\n\n\tupdateRoundInstances(instances) {\n\t\t// TODO: major refactoring, this SUCKS!\n\t\tinstances = instances || [];\n\n\t\tlet allInstances = [...instances];\n\n\t\tlet nextRoundIndexes = [];\n\n\t\tlet now = moment();\n\n\t\tallInstances.forEach(\n\t\t\t((instance, i) => {\n\t\t\t\tinstance.secondsRemaining = this.getSecondsRemainingBeforeRoundStart(\n\t\t\t\t\tinstance\n\t\t\t\t);\n\t\t\t\tinstance.isLive = this.isRoundLive(instance);\n\t\t\t\tinstance.pullNextQuestion = this.pullNextQuestion;\n\t\t\t\tinstance.submitAnswer = this.submitAnswer;\n\n\t\t\t\tinstance.name = this.formatRoundNames(\n\t\t\t\t\tinstance.platonicRoundNames\n\t\t\t\t);\n\n\t\t\t\tinstance.exhausted = false;\n\t\t\t\tif (\n\t\t\t\t\tthis.state.exhaustedRoundInstanceIds.indexOf(instance.id) >=\n\t\t\t\t\t0\n\t\t\t\t) {\n\t\t\t\t\tinstance.exhausted = true;\n\t\t\t\t}\n\n\t\t\t\tinstance.justFinished = false;\n\t\t\t\tlet endTime = moment(instance.endTime);\n\t\t\t\tinstance.millisecondsSinceRoundEnd = moment().diff(endTime);\n\n\t\t\t\tif (\n\t\t\t\t\tinstance.millisecondsSinceRoundEnd > 0 &&\n\t\t\t\t\tinstance.millisecondsSinceRoundEnd <\n\t\t\t\t\t\tconfig.quiz.showRoundFinishedScreenForMilliseconds\n\t\t\t\t) {\n\t\t\t\t\tinstance.justFinished = true;\n\t\t\t\t}\n\n\t\t\t\tif (now.isBefore(endTime)) {\n\t\t\t\t\tnextRoundIndexes.push(i);\n\t\t\t\t}\n\n\t\t\t\tif (this.state.nextPlayerQuestion) {\n\t\t\t\t\t// we've loaded a question, now add it to the relevant round\n\t\t\t\t\tif (\n\t\t\t\t\t\tinstance.id ==\n\t\t\t\t\t\tthis.state.nextPlayerQuestion.roundInstanceId\n\t\t\t\t\t) {\n\t\t\t\t\t\tinstance.playerQuestion = this.state.nextPlayerQuestion;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.state.answerResponse &&\n\t\t\t\t\t\t\tthis.state.answerResponse.roundInstanceId ==\n\t\t\t\t\t\t\t\tinstance.id\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tinstance.playerQuestion.answerReceived = true;\n\t\t\t\t\t\t\tinstance.playerQuestion.submittedIndex = this.state.answerResponse.submittedIndex;\n\t\t\t\t\t\t\tinstance.playerQuestion.correctIndex = this.state.answerResponse.correctIndex;\n\t\t\t\t\t\t\tinstance.playerQuestion.pointsEarned = this.state.answerResponse.pointsEarned;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinstance.playerQuestion = null;\n\t\t\t\t}\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tlet rounds = this.state.rounds;\n\t\trounds.allRoundInstances = allInstances;\n\t\trounds.nextRoundIndexes = nextRoundIndexes;\n\t\trounds.isLoading = false;\n\n\t\tlet initial = this.state.initial;\n\n\t\tif (initial.serverLoad) {\n\t\t\tinitial.updateAfterServerLoad = true;\n\t\t}\n\n\t\tthis.setState(function () {\n\t\t\treturn {\n\t\t\t\trounds: rounds,\n\t\t\t\tinitial: initial,\n\t\t\t};\n\t\t});\n\t}\n\n\treceiveTeamReassignment(newTeam) {\n\t\tif (newTeam) {\n\t\t\tlet player = this.state.player;\n\t\t\tplayer.team = newTeam;\n\t\t\tthis.setState(function () {\n\t\t\t\treturn {\n\t\t\t\t\tplayer: player,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\n\treceiveTeamAssignment(playerId, team) {\n\t\tlet player = this.state.player;\n\t\tplayer.team = team;\n\t\tlet showScreenUntil = moment().add(\n\t\t\tconfig.quiz.showTeamAssignedScreenForSeconds,\n\t\t\t's'\n\t\t);\n\t\tthis.setState(function () {\n\t\t\treturn {\n\t\t\t\tplayer: player,\n\t\t\t\tshowTeamAssignedScreenUntil: showScreenUntil,\n\t\t\t};\n\t\t});\n\t}\n\n\thandleSessionFormSubmit() {\n\t\tthis.setState({\n\t\t\tsessionForm: { ...this.state.sessionForm, isSubmitting: true },\n\t\t});\n\t\tconst playerName = this.state.sessionForm.playerName;\n\t\tconst sessionName = this.state.sessionForm.sessionName;\n\t\tif (this.isSessionFormValid(playerName, sessionName)) {\n\t\t\tvar submission = JSON.stringify({\n\t\t\t\tplayerName: playerName,\n\t\t\t\tsessionName: sessionName,\n\t\t\t});\n\t\t\tthis.state.socket.emit('join session', submission, (result) => {\n\t\t\t\tif (result.session && result.session.id) {\n\t\t\t\t\tthis.loadRoundInstances(result.session.id);\n\n\t\t\t\t\tif (!result.player.team) {\n\t\t\t\t\t\t// not yet team assigned, request team assignment in a few seconds\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.state.socket.emit(\n\t\t\t\t\t\t\t\t'assign team',\n\t\t\t\t\t\t\t\tresult.player.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}, config.quiz.assignTeamForMilliseconds); // 7500);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tsession: result.session,\n\t\t\t\t\tplayer: result.player,\n\t\t\t\t\tsessionForm: {\n\t\t\t\t\t\t...this.state.sessionForm,\n\t\t\t\t\t\tisSubmitting: false,\n\t\t\t\t\t\thasSubmitted: true,\n\t\t\t\t\t\tpreviousSubmission: sessionName,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\thandleSessionFormChange(playerName, sessionName) {\n\t\tthis.setState({\n\t\t\tsessionForm: {\n\t\t\t\tplayerName: playerName,\n\t\t\t\tsessionName: sessionName,\n\t\t\t\tisPlayerNameValid: this.isPlayerNameValid(playerName),\n\t\t\t\tisSessionNameValid: this.isSessionNameValid(sessionName),\n\t\t\t\tisValid: this.isSessionFormValid(playerName, sessionName),\n\t\t\t},\n\t\t});\n\t}\n\n\tisSessionNameValid(sessionName) {\n\t\treturn sessionName && sessionName.length >= 5;\n\t}\n\n\tisPlayerNameValid(playerName) {\n\t\treturn playerName && playerName.length >= 3;\n\t}\n\n\tisSessionFormValid(playerName, sessionName) {\n\t\treturn (\n\t\t\tthis.isSessionNameValid(sessionName) &&\n\t\t\tthis.isPlayerNameValid(playerName)\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<section className='section is-paddingless'>\n\t\t\t\t{this.state.session && (\n\t\t\t\t\t<Session\n\t\t\t\t\t\tshowTeamAssignedScreenUntil={\n\t\t\t\t\t\t\tthis.state.showTeamAssignedScreenUntil\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialLoadComplete={\n\t\t\t\t\t\t\tthis.state.initial.updateAfterServerLoad &&\n\t\t\t\t\t\t\tthis.state.initial.statusAfterPlayerLoad\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsession={this.state.session}\n\t\t\t\t\t\tplayer={this.state.player}\n\t\t\t\t\t\trounds={this.state.rounds}\n\t\t\t\t\t\tplayerStatus={this.state.playerStatus}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!this.state.session && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SessionForm\n\t\t\t\t\t\t\tsessionForm={this.state.sessionForm}\n\t\t\t\t\t\t\thandleChange={this.handleSessionFormChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSessionFormSubmit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<QuizExplanation />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{this.state.sessionForm.hasSubmitted && !this.state.session && (\n\t\t\t\t\t<div className='notification is-warning'>\n\t\t\t\t\t\tSorry,{' '}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{this.state.sessionForm.previousSubmission}\n\t\t\t\t\t\t</strong>{' '}\n\t\t\t\t\t\tis not currently a valid session.\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<ConnectionIndicator connected={this.state.socket.connected} />\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nQuizLogin.propTypes = {};\n\nexport default QuizLogin;\n","import React from 'react';\nimport Header from '../shared/header';\nimport Footer from '../shared/footer';\nimport QuizLogin from './quiz_login';\n\nconst Quiz = () => (\n\t<div>\n\t\t<Header />\n\t\t<div id='wrapper' className='columns' style={{ padding: '0 20px' }}>\n\t\t\t<div className='column is-half is-offset-one-quarter'>\n\t\t\t\t<QuizLogin />\n\t\t\t</div>\n\t\t</div>\n\t\t<Footer />\n\t</div>\n);\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LiveTag = (props) =>\n\t<span className={ (props.isLive ? 'is-success' : 'is-danger') + ' tag'} style={{marginLeft:'5px', marginRight: '5px'}}>\n\t\t{ props.isLive ? '-  -  LIVE  -  -' : 'NOT LIVE'}\n\t</span>;\n\nLiveTag.propTypes = {\n\tisLive: PropTypes.bool.isRequired\n};\n\nexport default LiveTag;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LiveTag from './live_tag';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport default class SessionTable extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.onDeleteSessionClicked = this.onDeleteSessionClicked.bind(this);\n\t}\n\n\tonDeleteSessionClicked(session){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to wipe out ' + session.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleDeleteSession(session.id)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\n\trender(){\n\t\treturn(\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Live?</th>\n\t\t\t\t\t\t<th>Players (Connected)</th>\n\t\t\t\t\t\t<th style={{color: 'orange'}}>Orange</th>\n\t\t\t\t\t\t<th style={{color: 'purple'}}>Purple</th>\n\t\t\t\t\t\t<th style={{color: 'grey'}}>None</th>\n\t\t\t\t\t\t<th>Rounds (Completed)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.sessions.map((session,i) =>\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.onDeleteSessionClicked(session)}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleSelectSession(session.id)}>{session.id}</a></td>\n\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleSelectSession(session.id)}>{session.name}</a></td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.props.handleFlipSessionLive(session.id)}>Flip</button>\n\t\t\t\t\t\t\t\t\t<LiveTag isLive={session.isLive} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{ session.players.length } ({ session.players.filter(n => n.isConnected).length })\n\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t{/* TODO: yup, this is dumb, but I am currently guaranteeing team_ids to be either 1, 2 or null and I'm in a real hurry here! -->\n\t\t\t\t\t\t\t\t\tif I decide to implement more than these two teams this will need to be more clever, iterating over a list of teams, or similar */}\n\t\t\t\t\t\t\t\t<td style={{color:'orange'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == 1;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td style={{color:'purple'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == 2;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td style={{color:'grey'}}>\n\t\t\t\t\t\t\t\t\t{ session.players.filter(function(p){return p.teamId == null;}).length }\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{ session.roundInstances.length } ({ session.roundInstances.filter(ri => ri != null && ri.endTime != null && moment(ri.endTime).isBefore(moment())).length })\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</table>);\n\t}\n}\n\nSessionTable.propTypes = {\n\tsessions: PropTypes.array.isRequired,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleDeleteSession: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst PlayerTeam = (props) => {\n\tlet teamName = 'None';\n\tlet colour = '#ddd';\n\n\tif(props.teamId){\n\t\tlet team = props.teams.find(t => t.id == props.teamId);\n\t\tif(team){\n\t\t\tteamName = team.name;\n\t\t\tcolour = team.colour;\n\t\t}\n\t}\n\n\treturn(\n\t\t<span style={{color: colour}}>{teamName}</span>\n\t);};\n\nPlayerTeam.propTypes = {\n\tteams: PropTypes.array.isRequired,\n\tteamId: PropTypes.number\n};\n\nexport default PlayerTeam;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PlayerTeam from './player_team';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nexport default class PlayerTable extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleFlipTeam = this.handleFlipTeam.bind(this);\n\t}\n\n\thandleFlipTeam(player){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to flip the team for ' + player.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleFlipTeam(player)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tonDeletePlayerClicked(player){\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage: 'You want to ***DELETE*** ' + player.name + '?',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.props.handleDeletePlayer(player.id)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<table className=\"table content has-text-centered is-striped is-narrow is-hoverable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Team</th>\n\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t<th>Questions Asked</th>\n\t\t\t\t\t\t<th>Questions Answered</th>\n\t\t\t\t\t\t<th>Correct Answers</th>\n\t\t\t\t\t\t<th>Correct Percentage</th>\n\t\t\t\t\t\t<th>Total Score</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.props.players.map((player, i) =>\n\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t<td><a onClick={() => this.onDeletePlayerClicked(player)}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t<td className={ 'has-text-weight-bold has-text-' + (player.isConnected ? 'success' : 'danger')}>\n\t\t\t\t\t\t\t\t{player.name}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className='has-text-weight-bold'>\n\t\t\t\t\t\t\t\t<PlayerTeam teamId={player.teamId} teams={this.props.teams} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.teamId &&\n\t\t\t\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.handleFlipTeam(player)}>\n\t\t\t\t\t\t\t\t\tFlip Team\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.totalQuestions}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.answeredQuestions}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.correctAnswers}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{ player.answeredQuestions != 0 ? Math.round(100 * (player.correctAnswers / player.answeredQuestions)) + '%' : 'N/A'}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{player.totalScore}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</table>);\n\t}\n\n}\n\nPlayerTable.propTypes = {\n\tplayers: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LiveTag from './live_tag';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport PlayerTable from './player_table';\n\n\nclass SessionAdmin extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {selectedRoundLength: 30,\n\t\t\tselectedRoundDelay: 5,\n\t\t\tselectedWrongAnswerFactor: -1,\n\t\t\tinputPointsPerQuestion: 10,\n\t\t\tisLoadingPreviousRounds: false,\n\t\t\tselectedPlatonicRoundIds: []};\n\n\n\t\tthis.handleRoundLengthChange = this.handleRoundLengthChange.bind(this);\n\t\tthis.handleRoundDelayChange = this.handleRoundDelayChange.bind(this);\n\t\tthis.handlePointsPerQuestionChange = this.handlePointsPerQuestionChange.bind(this);\n\t\tthis.handleWrongAnswerFactorChange = this.handleWrongAnswerFactorChange.bind(this);\n\n\t\tthis.onSubmitNewRound = this.onSubmitNewRound.bind(this);\n\t\tthis.onClickStartRound = this.onClickStartRound.bind(this);\n\t\tthis.newRoundIsValid = this.newRoundIsValid.bind(this);\n\t\tthis.platonicRoundLabelClicked = this.platonicRoundLabelClicked.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.timerID = setInterval(() => this.tick(), 2500);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick(){\n\t\tthis.forceUpdate();\n\t}\n\n\tnewRoundIsValid(){\n\t\treturn Number.isInteger(this.state.inputPointsPerQuestion) &&\n\t\t\t\tthis.state.selectedPlatonicRoundIds.length > 0  &&\n\t\t\t\t!Number.isNaN(this.state.selectedRoundLength) && this.state.selectedRoundLength > 0 && this.state.selectedRoundLength < 60;\n\t}\n\n\tonClickStartRound(){\n\n\t\tif(this.newRoundIsValid()){\n\n\t\t\tvar roundName = '';\n\n\t\t\tthis.state.selectedPlatonicRoundIds.forEach(prid => {\n\t\t\t\troundName += this.props.platonicRounds.filter(n => n.id == prid)[0].name + ' / ';\n\t\t\t});\n\n\t\t\tconfirmAlert({\n\t\t\t\ttitle: 'Are you sure?',\n\t\t\t\tmessage: 'You want to start a round of ' + roundName.toString().toUpperCase() + ' for ' + this.state.selectedRoundLength + ' minutes, ' + ' starting in ' + this.state.selectedRoundDelay + ' seconds?',\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\t\tonClick: () => this.onSubmitNewRound()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'No',\n\t\t\t\t\t\tonClick: null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\n\tplatonicRoundLabelClicked(prid){\n\t\tlet ids =  this.state.selectedPlatonicRoundIds;\n\t\tlet index = ids.indexOf(prid);\n\t\tif(ids.indexOf(prid) >= 0){\n\t\t\tids.splice(index, 1);\n\t\t}else{\n\t\t\tids.push(prid);\n\t\t}\n\t\tthis.setState({ selectedPlatonicRoundIds: ids });\n\t}\n\n\n\thandleRoundLengthChange(e){\n\n\t\tthis.setState({ selectedRoundLength: parseFloat(e.target.value) });\n\t}\n\n\thandleRoundDelayChange(e){\n\t\tthis.setState({ selectedRoundDelay: parseInt(e.target.value) });\n\t}\n\n\thandleWrongAnswerFactorChange(e){\n\t\tthis.setState({ selectedWrongAnswerFactor: parseInt(e.target.value)});\n\t}\n\n\thandlePointsPerQuestionChange(e){\n\t\ttry{\n\t\t\tlet v = parseInt(e.target.value);\n\t\t\tthis.setState({ inputPointsPerQuestion: v });\n\t\t}catch(ex){\n\t\t\t// do literally nothing, only I will ever use this page\n\t\t}\n\t}\n\n\tonSubmitNewRound(){\n\n\t\tlet now = moment();\n\t\tlet startTime = now.add(this.state.selectedRoundDelay, 's');\n\t\tstartTime.add(5, 's');\n\t\tlet startTimeFormatted = startTime.utc().format();\n\t\tlet endTime = startTime.add(this.state.selectedRoundLength, 'm');\n\t\tlet endTimeFormatted = endTime.utc().format();\n\n\t\tvar newRoundInstance = {\n\t\t\tstartTime: startTimeFormatted,\n\t\t\tendTime: endTimeFormatted,\n\t\t\tplatonicRoundIds: this.state.selectedPlatonicRoundIds,\n\t\t\tsessionId: this.props.session.id,\n\t\t\tpointsPerQuestion: this.state.inputPointsPerQuestion,\n\t\t\twrongAnswerFactor: this.state.selectedWrongAnswerFactor\n\t\t};\n\n\t\tthis.props.handleSubmitNewRound(newRoundInstance);\n\t}\n\n\n\tisLive(startTime, endTime){\n\t\tconst now = moment();\n\t\treturn now.isAfter(startTime) && now.isBefore(endTime);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"notification\">\n\t\t\t\t\t<a onClick={()=> this.props.handleSelectSession(null)}>Go Back</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h2 className=\"subtitle\" style={{display:'inline-block'}}>Session { this.props.session.id } : {this.props.session.name}</h2>\n\t\t\t\t\t<LiveTag isLive={this.props.session.isLive} />\n\t\t\t\t\t<button className=\"button is-info\" onClick={() => this.props.handleFlipSessionLive(this.props.session.id)}>Flip</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<PlayerTable handleDeletePlayer={this.props.handleDeletePlayer} handleFlipTeam={this.props.handleFlipTeam} players={this.props.session.players} teams={this.props.teams} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h2 className=\"subtitle\">Previous Rounds</h2>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>-</th>\n\t\t\t\t\t\t\t\t<th>Number</th>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>PPQ</th>\n\t\t\t\t\t\t\t\t<th>Start</th>\n\t\t\t\t\t\t\t\t<th>End</th>\n\t\t\t\t\t\t\t\t<th>Questions Asked</th>\n\t\t\t\t\t\t\t\t<th>Questions Answered</th>\n\t\t\t\t\t\t\t\t<th>Correct Answers</th>\n\t\t\t\t\t\t\t\t<th>Correct Percentage</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{ this.props.session.roundInstances && this.props.session.roundInstances.length > 0 && this.props.session.roundInstances.map((round, i) =>\n\t\t\t\t\t\t\t\t<tr key={i} className={ (this.isLive(round.startTime, round.endTime) ? 'has-background-success' : 'has-background-warning')} >\n\t\t\t\t\t\t\t\t\t<td><a onClick={() => this.props.handleDeleteRoundInstance(round.id)}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} style={{color: 'black'}}/>\n\t\t\t\t\t\t\t\t\t</a></td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\">{i + 1}</td>\n\t\t\t\t\t\t\t\t\t<td>{ round.platonicRounds.map(pr => pr.name).join('/') }</td>\n\t\t\t\t\t\t\t\t\t<td>{round.pointsPerQuestion}</td>\n\t\t\t\t\t\t\t\t\t<td><Moment format=\"HH:mm:ss\">{round.startTime}</Moment></td>\n\t\t\t\t\t\t\t\t\t<td><Moment format=\"HH:mm:ss\">{round.endTime}</Moment></td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAsked ? round.questionsAsked : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAnswered ? round.questionsAnswered : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.correctAnswers ? round.correctAnswers : '0'} </td>\n\t\t\t\t\t\t\t\t\t<td className=\"has-text-centered\"> {round.questionsAnswered && round.correctAnswers ? Math.round(100 * (round.correctAnswers / round.questionsAnswered)) + '%' : 'N/A'} </td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box\">\n\t\t\t\t\t<h3 className=\"has-text-bold is-size-4\">Create New Round: </h3>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.platonicRounds.map((pr, i) =>\n\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t<label onClick={() => this.platonicRoundLabelClicked(pr.id) } className={'checkbox ' + (pr.parseAsMaths ? 'has-text-info' : '')} htmlFor={'checkbox' + pr.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input style={{marginRight: '5px'}} type=\"checkbox\" name={'checkbox' + pr.name} value={pr.id} checked={(this.state.selectedPlatonicRoundIds.indexOf(pr.id) >= 0)} />\n\t\t\t\t\t\t\t\t\t\t\t\t{pr.name}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"roundLength\" className=\"label\">Length: </label>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<th><select id=\"roundLength\" value={this.state.selectedRoundLength} onChange={this.handleRoundLengthChange}>\n\t\t\t\t\t\t\t\t\t<option value={0.1}>6 seconds</option>\n\t\t\t\t\t\t\t\t\t<option value={0.25}>15 seconds</option>\n\t\t\t\t\t\t\t\t\t<option value={1}>1</option>\n\t\t\t\t\t\t\t\t\t<option value={2}>2</option>\n\t\t\t\t\t\t\t\t\t<option value={5}>5</option>\n\t\t\t\t\t\t\t\t\t<option value={8}>8</option>\n\t\t\t\t\t\t\t\t\t<option value={10}>10</option>\n\t\t\t\t\t\t\t\t\t<option value={12}>12</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>15</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>20</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>25</option>\n\t\t\t\t\t\t\t\t\t<option value={30}>30</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span style={{marginLeft: '5px'}}>minutes</span>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><label htmlFor=\"roundDelay\" className=\"label\">Starting in: </label></th>\n\t\t\t\t\t\t\t\t<th><select id=\"roundDelay\" value={this.state.selectedRoundDelay} onChange={this.handleRoundDelayChange}>\n\t\t\t\t\t\t\t\t\t<option value={5}>5</option>\n\t\t\t\t\t\t\t\t\t<option value={10}>10</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>15</option>\n\t\t\t\t\t\t\t\t\t<option value={15}>20</option>\n\t\t\t\t\t\t\t\t\t<option value={30}>30</option>\n\t\t\t\t\t\t\t\t\t<option value={60}>60</option>\n\t\t\t\t\t\t\t\t\t<option value={600}>600</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span style={{marginLeft: '5px'}}>seconds</span>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><label htmlFor=\"wrongAnswerFactor\" className=\"label\">Wrong Answer Multiplication Factor </label></th>\n\t\t\t\t\t\t\t\t<th><select id=\"wrongAnswerFactor\" value={this.state.selectedWrongAnswerFactor} onChange={this.handleWrongAnswerFactorChange}>\n\t\t\t\t\t\t\t\t\t<option value={0}>0</option>\n\t\t\t\t\t\t\t\t\t<option value={-1}>-1</option>\n\t\t\t\t\t\t\t\t\t<option value={-2}>-2</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"pointsPerQuestion\" className=\"label\">Points Per Question: </label></th>\n\t\t\t\t\t\t\t\t<th><input id=\"pointsPerQuestion\" value={this.state.inputPointsPerQuestion} onChange={this.handlePointsPerQuestionChange} />\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName={ (this.newRoundIsValid() ? 'is-success' : 'is danger') + ' button' }\n\t\t\t\t\t\t\t\t\t\tdisabled={ (!this.newRoundIsValid()) }\n\t\t\t\t\t\t\t\t\t\tonClick={ this.onClickStartRound }>\n\t\t\t\t\t\t\tStart!\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSessionAdmin.propTypes = {\n\tsession: PropTypes.object.isRequired,\n\tteams: PropTypes.array.isRequired,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired,\n\thandleSubmitNewRound: PropTypes.func.isRequired,\n\thandleDeleteRoundInstance: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired,\n\tplatonicRounds: PropTypes.array.isRequired\n};\n\nexport default SessionAdmin;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SessionTable from './admin_session_table';\nimport SessionAdmin from './admin_session';\n\nclass SessionList extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t}\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ (!this.props.selectedSessionId) &&\n\t\t\t\t\t<SessionTable sessions={this.props.sessions} handleDeleteSession={this.props.handleDeleteSession} handleFlipSessionLive={this.props.handleFlipSessionLive} handleSelectSession={this.props.handleSelectSession} />\n\t\t\t\t}\n\t\t\t\t{ (this.props.selectedSessionId) &&\n\t\t\t\t\t<SessionAdmin\n\t\t\t\t\t\tsession={this.props.sessions.filter(n => n.id == this.props.selectedSessionId)[0]}\n\t\t\t\t\t\tplatonicRounds = {this.props.platonicRounds}\n\t\t\t\t\t\tteams={this.props.teams}\n\t\t\t\t\t\thandleFlipTeam={this.props.handleFlipTeam}\n\t\t\t\t\t\thandleSelectSession={this.props.handleSelectSession}\n\t\t\t\t\t\thandleFlipSessionLive={this.props.handleFlipSessionLive}\n\t\t\t\t\t\thandleSubmitNewRound={this.props.handleSubmitNewRound}\n\t\t\t\t\t\thandleDeleteRoundInstance={this.props.handleDeleteRoundInstance}\n\t\t\t\t\t\thandleDeletePlayer={this.props.handleDeletePlayer}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionList;\n\nSessionList.propTypes = {\n\tsessions: PropTypes.array.isRequired,\n\tteams: PropTypes.array.isRequired,\n\tselectedSessionId: PropTypes.number,\n\thandleSelectSession: PropTypes.func.isRequired,\n\thandleFlipSessionLive: PropTypes.func.isRequired,\n\thandleFlipTeam: PropTypes.func.isRequired,\n\thandleSubmitNewRound: PropTypes.func.isRequired,\n\thandleDeleteRoundInstance: PropTypes.func.isRequired,\n\thandleDeletePlayer: PropTypes.func.isRequired,\n\thandleDeleteSession: PropTypes.func.isRequired,\n\tplatonicRounds: PropTypes.array.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PlatonicRoundsTable = (props) => (\n\t<table className='table'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Question Count</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{props.platonicRounds.map((pr, i) => (\n\t\t\t\t<tr key={i} className={pr.parseAsMaths ? 'has-text-info' : ''}>\n\t\t\t\t\t<td>{pr.id}</td>\n\t\t\t\t\t<td>{pr.name}</td>\n\t\t\t\t\t<td>{pr.questionCount ? pr.questionCount : '?'}</td>\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t</tbody>\n\t</table>\n);\n\nPlatonicRoundsTable.propTypes = {\n\tplatonicRounds: PropTypes.array.isRequired,\n};\n\nexport default PlatonicRoundsTable;\n","import React, { Component } from 'react';\nimport Header from '../shared/header';\nimport Footer from '../shared/footer';\nimport SessionList from './admin_session_list';\nimport socketIOClient from 'socket.io-client';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport SuccessIcon from '../shared/success_icon';\nimport PlatonicRoundsTable from './platonic_rounds_table';\nimport config from '../../config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nclass Admin extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\t\tconst socket = socketIOClient(socketAddress);\n\n\t\twindow.addEventListener(\n\t\t\t'focus',\n\t\t\t(() => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}).bind(this)\n\t\t);\n\n\t\tsocket.on(\n\t\t\t'connect',\n\t\t\t(() => {\n\t\t\t\t// inform the server this socket wants to know about admin events\n\t\t\t\tsocket.emit('admin connection');\n\t\t\t}).bind(this)\n\t\t);\n\n\t\t// TODO: replace these update functions with a 'less heavy' approach\n\t\t// for now i'm just stomping ALL the data on every update, but these could send\n\t\t// individual events with the actual data to be changed\n\t\t// and just update more gently\n\t\t// (like the client connection changed, which COULD just update the client connection instead of stomping)\n\t\t// for now i'm using one giant event because only I will be on this, and I've throttled fetchQuiz to only\n\t\t// work every few seconds anyway...\n\t\tsocket.on('client connection changed', () => this.fetchQuiz());\n\t\tsocket.on('update admin data', () => this.fetchQuiz());\n\n\t\tthis.state = {\n\t\t\tsocket: socket,\n\t\t\tselectedSessionId: null,\n\t\t\tsessions: [],\n\t\t\tplatonicRounds: [],\n\t\t\tteams: [],\n\t\t\tisFetching: false,\n\t\t\tnewSessionName: '',\n\t\t};\n\n\t\tthis.handleSelectSession = this.handleSelectSession.bind(this);\n\t\tthis.fetchQuiz = this.fetchQuiz.bind(this);\n\t\tthis.handleFlipSessionLive = this.handleFlipSessionLive.bind(this);\n\t\tthis.handleSubmitNewRound = this.handleSubmitNewRound.bind(this);\n\t\tthis.handleFlipTeam = this.handleFlipTeam.bind(this);\n\t\tthis.handleDeletePlayer = this.handleDeletePlayer.bind(this);\n\t\tthis.handleDeleteSession = this.handleDeleteSession.bind(this);\n\t\tthis.handleReseedDatabase = this.handleReseedDatabase.bind(this);\n\t\tthis.handleWipeAllData = this.handleWipeAllData.bind(this);\n\n\t\tthis.onClickWipeAllData = this.onClickWipeAllData.bind(this);\n\t\tthis.onClickReseedDatabase = this.onClickReseedDatabase.bind(this);\n\n\t\tthis.handleDeleteRoundInstance = this.handleDeleteRoundInstance.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onChangeSessionName = this.onChangeSessionName.bind(this);\n\t\tthis.createNewSession = this.createNewSession.bind(this);\n\t\tthis.isNewSessionNameValid = this.isNewSessionNameValid.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.title = 'QAdmin';\n\n\t\tthis.loadInitialData();\n\t\tthis.fetchQuiz();\n\t}\n\n\tloadInitialData() {\n\t\tthis.loadPlatonicRounds();\n\t\tthis.loadTeams();\n\t}\n\n\tloadPlatonicRounds() {\n\t\tthis.state.socket.emit('fetch platonic round list', (list) => {\n\t\t\tthis.setState({ platonicRounds: list });\n\t\t});\n\t}\n\n\tloadTeams() {\n\t\tthis.state.socket.emit('fetch teams', (teams) => {\n\t\t\tthis.setState({ teams: teams });\n\t\t});\n\t}\n\n\tfetchQuiz() {\n\t\t// TODO: consider adding a throttle here to only update every 5s at most (needs to set a timeout to update in a moment)\n\n\t\tif (!this.state.isFetching) {\n\t\t\tthis.setState({ isFetching: true });\n\t\t\tthis.state.socket.emit('fetch quiz', (sessions) => {\n\t\t\t\tthis.setState({ sessions: sessions, isFetching: false });\n\t\t\t});\n\t\t}\n\t}\n\n\tonChangeSessionName(e) {\n\t\tthis.setState({ newSessionName: e.target.value });\n\t}\n\n\thandleFlipTeam(player) {\n\t\tthis.state.socket.emit('flip team', player, () => {\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleSelectSession(id) {\n\t\tthis.fetchQuiz();\n\t\tthis.setState({ selectedSessionId: id });\n\t}\n\n\thandleSubmitNewRound(newRound) {\n\t\tthis.state.socket.emit('submit new round instance', newRound, () => {\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleDeleteRoundInstance(id) {\n\t\tthis.state.socket.emit(\n\t\t\t'delete round instance',\n\t\t\tid,\n\t\t\tthis.state.selectedSessionId,\n\t\t\t() => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}\n\t\t);\n\t}\n\n\tupdateRoundInstanceTimes() {\n\t\t// this just needs to call the db, and then the server function calls pushRoundInstanceToSession (see newround/deleteround)\n\t}\n\n\thandleFlipSessionLive(sessionId) {\n\t\tthis.state.socket.emit(\n\t\t\t'admin flip session live',\n\t\t\tsessionId,\n\t\t\t(() => {\n\t\t\t\t// this.loadSessions();\n\t\t\t\tthis.fetchQuiz();\n\t\t\t}).bind(this)\n\t\t);\n\t}\n\n\tonClickWipeAllData() {\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage:\n\t\t\t\t'*** THIS WILL WIPE ALL OF THE EXISTING SESSIONS, ROUNDS, PLAYERS, AND SUBMITTED QUESTIONS/ANSWERS ***',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.handleWipeAllData(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tonClickReseedDatabase() {\n\t\tconfirmAlert({\n\t\t\ttitle: 'Are you sure?',\n\t\t\tmessage:\n\t\t\t\t'*** THIS WILL DELETE **ALL DATA** AND RESEED ALL OF THE PLATONIC ROUNDS AND QUESTIONS ***',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Yes!',\n\t\t\t\t\tonClick: () => this.handleReseedDatabase(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'No',\n\t\t\t\t\tonClick: null,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\thandleReseedDatabase() {\n\t\tthis.state.socket.emit('reseed database', (message) => {\n\t\t\tif (message == 'ok') {\n\t\t\t\talert('ok');\n\t\t\t} else if (message && message.name == 'error') {\n\t\t\t\talert('error');\n\t\t\t} else {\n\t\t\t\talert('unexpected response: ' + message);\n\t\t\t}\n\n\t\t\tthis.loadInitialData();\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\thandleWipeAllData() {\n\t\tthis.state.socket.emit('wipe all data', () => {\n\t\t\tthis.loadInitialData();\n\t\t\tthis.fetchQuiz();\n\t\t});\n\t}\n\n\tisNewSessionNameValid() {\n\t\treturn (\n\t\t\tthis.state.newSessionName && this.state.newSessionName.length > 3\n\t\t);\n\t}\n\n\tcreateNewSession() {\n\t\tif (this.isNewSessionNameValid()) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'create new session',\n\t\t\t\tthis.state.newSessionName,\n\t\t\t\t() => {\n\t\t\t\t\tthis.fetchQuiz();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\thandleDeletePlayer(playerId) {\n\t\tif (playerId && Number.isInteger(playerId)) {\n\t\t\tthis.state.socket.emit('delete player', playerId, () => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t});\n\t\t}\n\t}\n\n\thandleDeleteSession(sessionId) {\n\t\tif (sessionId && Number.isInteger(sessionId)) {\n\t\t\tthis.state.socket.emit('delete session', sessionId, () => {\n\t\t\t\tthis.fetchQuiz();\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div className='columns'>\n\t\t\t\t\t<div className='column is-half is-offset-one-quarter'>\n\t\t\t\t\t\t<section className='section'>\n\t\t\t\t\t\t\t<h1 className='title'>Admin</h1>\n\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>Sessions</h2>\n\t\t\t\t\t\t\t\t<SessionList\n\t\t\t\t\t\t\t\t\tsessions={this.state.sessions}\n\t\t\t\t\t\t\t\t\tplatonicRounds={this.state.platonicRounds}\n\t\t\t\t\t\t\t\t\tteams={this.state.teams}\n\t\t\t\t\t\t\t\t\tselectedSessionId={\n\t\t\t\t\t\t\t\t\t\tthis.state.selectedSessionId\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleFlipTeam={this.handleFlipTeam}\n\t\t\t\t\t\t\t\t\thandleSubmitNewRound={\n\t\t\t\t\t\t\t\t\t\tthis.handleSubmitNewRound\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleDeleteRoundInstance={\n\t\t\t\t\t\t\t\t\t\tthis.handleDeleteRoundInstance\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleDeletePlayer={this.handleDeletePlayer}\n\t\t\t\t\t\t\t\t\thandleDeleteSession={\n\t\t\t\t\t\t\t\t\t\tthis.handleDeleteSession\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleFlipSessionLive={\n\t\t\t\t\t\t\t\t\t\tthis.handleFlipSessionLive\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleSelectSession={\n\t\t\t\t\t\t\t\t\t\tthis.handleSelectSession\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{!this.state.selectedSessionId && (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='label'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor='sessionName'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd New Session\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='field'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='control has-icons-left has-icons-right'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(this.isNewSessionNameValid()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'is-success'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'is-warning') +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' input'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='sessionName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='New session name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.newSessionName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.onChangeSessionName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='icon is-small is-left'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfaUser\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isNewSessionNameValid()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition='is-right'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='level'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='level-item'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-info'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.createNewSession\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>\n\t\t\t\t\t\t\t\t\tAvailable Platonic Rounds\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<span className='has-text-info'>Maths</span>{' '}\n\t\t\t\t\t\t\t\t\t/ Not Maths)\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<PlatonicRoundsTable\n\t\t\t\t\t\t\t\t\tplatonicRounds={this.state.platonicRounds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{!this.state.selectedSessionId && (\n\t\t\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t\t\t<h2 className='subtitle is-size-4'>\n\t\t\t\t\t\t\t\t\t\t\tDangerous Nonsense\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-danger'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onClickWipeAllData\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\tWipe All Data\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button is-danger'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onClickReseedDatabase\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\tReseed Database\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","import React, { Component } from 'react';\nimport config from '../../config';\nimport socketIOClient from 'socket.io-client';\nimport Admin from './admin';\n\n/* TODO: VERY QUICK AND DIRTY PROTOTYPE: REPLACE WITH *ACTUAL AUTHENTICATION* */\nclass AdminGate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\t\tconst temporarySocket = socketIOClient(socketAddress);\n\n\t\ttemporarySocket.on('connect', () => {\n\t\t\ttemporarySocket.emit('temporary admin connection');\n\t\t});\n\n\t\tthis.state = {\n\t\t\ttemporarySocket: temporarySocket,\n\t\t\tinputWord: '',\n\t\t\tpassed: config.isDev,\n\t\t};\n\n\t\tthis.onChangeInputWord = this.onChangeInputWord.bind(this);\n\t\tthis.onClickGoButton = this.onClickGoButton.bind(this);\n\t}\n\n\tonChangeInputWord(e) {\n\t\tthis.setState({ inputWord: e.target.value });\n\t}\n\n\tonClickGoButton() {\n\t\t/* TODO: this will obviously not remotely stop a determined intruder, but there's nothing of value inside\n\t\t\t\tso all I need is to deter anybody actually playing the live game. for now!\n\t\t*/\n\t\tthis.state.temporarySocket.emit(\n\t\t\t'authenticate admin',\n\t\t\tthis.state.inputWord,\n\t\t\t(result) => {\n\t\t\t\tthis.setState({ passed: result });\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!this.state.passed && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={this.state.inputWord}\n\t\t\t\t\t\t\tonChange={this.onChangeInputWord}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={this.onClickGoButton}>Go</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.state.passed && <Admin />}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AdminGate;\n","import React, { Component } from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { FlexibleXYPlot, XAxis, YAxis, VerticalBarSeries, LabelSeries } from 'react-vis';\nimport windowDimensions from 'react-window-dimensions';\n\nclass SessionScores extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {  };\n\t}\n\n\troundUp(x){\n\t\tvar negative = false;\n\n\t\tif(x < 0) {\n\t\t\tnegative = true;\n\t\t\tx *= -1;\n\t\t}\n\t\tvar y = Math.pow(10, x.toString().length-1); x = (x/y);\n\t\tx = Math.ceil(x);\n\t\tx = x*y;\n\t\tif(negative) x *= -1;\n\t\treturn x;\n\t}\n\n\trender() {\n\n\t\tlet width = Math.max(this.props.width- 500, 300);\n\t\tlet height = Math.max(this.props.height - 300, 300);\n\n\t\tlet data = [];\n\t\tlet maxScore = 0;\n\t\tlet minScore = 0;\n\n\t\tif(this.props.teamScores && this.props.teamScores.length > 0)\n\t\t{\n\t\t\tdata = this.props.teamScores.map((ts,i) =>\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tx: 'Team ' + ts.name,\n\t\t\t\t\ty: ts.totalScore,\n\t\t\t\t\tcolor: ts.colour,\n\t\t\t\t\tlabel: ts.totalScore,\n\t\t\t\t\tyOffset: 0,\n\t\t\t\t\tstyle: { fontSize: '2.8rem', fontWeight: 'bold', fill:'white', stroke: 'black', strokeWidth: '2px'}};\n\t\t\t});\n\n\t\t\tmaxScore =  Math.max(...this.props.teamScores.map(o => o.totalScore), 0);\n\t\t\tminScore = this.props.teamScores.reduce((min, p) => p.totalScore < min ? p.totalScore : min, 0);\n\t\t}\n\n\t\tlet yMax = this.roundUp(maxScore);\n\n\t\tconsole.log(maxScore + '; ' + yMax);\n\n\t\tlet yDomain = [minScore, yMax];\n\n\t\treturn (\n\t\t\t<div style={{width: width + 100, margin:'auto'}}>\n\t\t\t\t<a onClick={() => this.props.selectSession(null)}>Back</a>\n\t\t\t\t<FlexibleXYPlot animation height={height} width={width} xType=\"ordinal\" yDomain={yDomain} style={{overflow:'visible'}}>\n\t\t\t\t\t<VerticalBarSeries animation data={data} colorType='literal' />\n\t\t\t\t\t<LabelSeries\n\t\t\t\t\t\tanimation\n\t\t\t\t\t\tallowOffsetToBeReversed\n\t\t\t\t\t\tdata={data} style={{color:'white !important'}} />\n\t\t\t\t\t<XAxis animation style={{ fontSize: '2rem', fontWeight: 'bold'}}/>\n\t\t\t\t\t<YAxis animation style={{ fontSize: '1.5rem', fontWeight: 'bold'}} />\n\t\t\t\t</FlexibleXYPlot>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default windowDimensions()(SessionScores);","import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Header from '../shared/header';\nimport config from '../../config';\nimport SessionScores from './session_scores';\n\nclass Scores extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tlet socketAddress =\n\t\t\tconfig.socket.protocol +\n\t\t\t'://' +\n\t\t\tconfig.socket.address +\n\t\t\t':' +\n\t\t\tconfig.socket.port;\n\n\t\tconst socket = socketIOClient(socketAddress);\n\n\t\tsocket.on('connect', () => {\n\t\t\t// happens on first connection, and on subsequent reconnections\n\t\t\t// so each time we want to register for events\n\n\t\t\t// (this will join or rejoin the server-side session room, if we have one)\n\t\t\tsocket.emit('scores connection');\n\t\t});\n\n\t\tsocket.on('update scores data', () => {\n\t\t\tthis.updateSession();\n\t\t});\n\t\tsocket.on('update sessions list', () => {\n\t\t\tthis.fetchLiveSessions();\n\t\t});\n\n\t\tthis.state = {\n\t\t\tsocket: socket,\n\t\t\tliveSessions: [],\n\t\t\tselectedSessionId: null,\n\t\t\tteamScores: [],\n\t\t};\n\n\t\tthis.receiveLiveSessions = this.receiveLiveSessions.bind(this);\n\t\tthis.tick = this.tick.bind(this);\n\t\tthis.updateSession = this.updateSession.bind(this);\n\t\tthis.selectSession = this.selectSession.bind(this);\n\t\tthis.fetchLiveSessions = this.fetchLiveSessions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 900);\n\t\tthis.fetchLiveSessions();\n\t\tdocument.title = 'Q Scores';\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\tfetchLiveSessions() {\n\t\tthis.state.socket.emit('fetch live sessions', this.receiveLiveSessions);\n\t}\n\n\treceiveLiveSessions(sessions) {\n\t\tthis.setState({ liveSessions: sessions });\n\t}\n\n\tselectSession(id) {\n\t\tthis.setState({ selectedSessionId: id, teamScores: [] });\n\t\tthis.updateSession();\n\t}\n\n\ttick() {\n\t\tthis.updateSession();\n\t}\n\n\tupdateSession() {\n\t\tif (this.state.selectedSessionId) {\n\t\t\tthis.state.socket.emit(\n\t\t\t\t'fetch team scores',\n\t\t\t\tthis.state.selectedSessionId,\n\t\t\t\t(teamScores) => {\n\t\t\t\t\tthis.setState({ teamScores: teamScores });\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet liveSessions = this.state.liveSessions;\n\t\tlet sessionSelected = !!this.state.selectedSessionId;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<section className='section'>\n\t\t\t\t\t{!sessionSelected && (\n\t\t\t\t\t\t<div className='box'>\n\t\t\t\t\t\t\t{liveSessions && liveSessions.length > 0 && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h1 className='title'>Pick Session</h1>\n\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{liveSessions.map((s, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='subtitle'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.selectSession(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ts.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{(!liveSessions || liveSessions.length == 0) && (\n\t\t\t\t\t\t\t\t<h1 className='title'>No Live Sessions</h1>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{sessionSelected && (\n\t\t\t\t\t\t<SessionScores\n\t\t\t\t\t\t\tsessionId={this.state.selectedSessionId}\n\t\t\t\t\t\t\tselectSession={this.selectSession}\n\t\t\t\t\t\t\tteamScores={this.state.teamScores}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Scores;\n","import React from 'react';\nimport ErrorBoundary from './error_boundary';\n\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Quiz from './components/quiz/quiz';\nimport AdminGate from './components/admin/admin_gate';\nimport Scores from './components/scores/scores';\n\n// console.log(process.env.PUBLIC_URL);\n\nconst App = () => (\n\t<ErrorBoundary>\n\t\t<HashRouter basename='/q'>\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath='/'\n\t\t\t\t\t// path={`${process.env.PUBLIC_URL}/q/`}\n\t\t\t\t\tcomponent={Quiz}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={'/admin'}\n\t\t\t\t\t// path={`${process.env.PUBLIC_URL}/admin`}\n\t\t\t\t\tcomponent={AdminGate}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={'/scores'}\n\t\t\t\t\t// path={`${process.env.PUBLIC_URL}/scores`}\n\t\t\t\t\tcomponent={Scores}\n\t\t\t\t/>\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t</ErrorBoundary>\n);\n\nexport default App;\n\nconst NotFound = () => <h1>404.. Page not found!</h1>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from './App';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('./resources/styles/styles.js');\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}